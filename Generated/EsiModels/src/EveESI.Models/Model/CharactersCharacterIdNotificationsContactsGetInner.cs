/*
 * EVE Stable Infrastructure (ESI) - tranquility
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2025-08-26
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using OpenAPIDateConverter = EveESI.Models.Client.OpenAPIDateConverter;

namespace EveESI.Models.Model
{
    /// <summary>
    /// CharactersCharacterIdNotificationsContactsGetInner
    /// </summary>
    [DataContract(Name = "CharactersCharacterIdNotificationsContactsGet_inner")]
    public partial class CharactersCharacterIdNotificationsContactsGetInner
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="CharactersCharacterIdNotificationsContactsGetInner" /> class.
        /// </summary>
        [JsonConstructorAttribute]
        protected CharactersCharacterIdNotificationsContactsGetInner() { }
        /// <summary>
        /// Initializes a new instance of the <see cref="CharactersCharacterIdNotificationsContactsGetInner" /> class.
        /// </summary>
        /// <param name="message">message (required).</param>
        /// <param name="notificationId">notificationId (required).</param>
        /// <param name="sendDate">sendDate (required).</param>
        /// <param name="senderCharacterId">senderCharacterId (required).</param>
        /// <param name="standingLevel">A number representing the standing level the receiver has been added at by the sender. The standing levels are as follows: -10 -&gt; Terrible | -5 -&gt; Bad |  0 -&gt; Neutral |  5 -&gt; Good |  10 -&gt; Excellent (required).</param>
        public CharactersCharacterIdNotificationsContactsGetInner(string message = default(string), long notificationId = default(long), DateTime sendDate = default(DateTime), long senderCharacterId = default(long), double standingLevel = default(double))
        {
            // to ensure "message" is required (not null)
            if (message == null)
            {
                throw new ArgumentNullException("message is a required property for CharactersCharacterIdNotificationsContactsGetInner and cannot be null");
            }
            this.Message = message;
            this.NotificationId = notificationId;
            this.SendDate = sendDate;
            this.SenderCharacterId = senderCharacterId;
            this.StandingLevel = standingLevel;
        }

        /// <summary>
        /// Gets or Sets Message
        /// </summary>
        [DataMember(Name = "message", IsRequired = true, EmitDefaultValue = true)]
        public string Message { get; set; }

        /// <summary>
        /// Gets or Sets NotificationId
        /// </summary>
        [DataMember(Name = "notification_id", IsRequired = true, EmitDefaultValue = true)]
        public long NotificationId { get; set; }

        /// <summary>
        /// Gets or Sets SendDate
        /// </summary>
        [DataMember(Name = "send_date", IsRequired = true, EmitDefaultValue = true)]
        public DateTime SendDate { get; set; }

        /// <summary>
        /// Gets or Sets SenderCharacterId
        /// </summary>
        [DataMember(Name = "sender_character_id", IsRequired = true, EmitDefaultValue = true)]
        public long SenderCharacterId { get; set; }

        /// <summary>
        /// A number representing the standing level the receiver has been added at by the sender. The standing levels are as follows: -10 -&gt; Terrible | -5 -&gt; Bad |  0 -&gt; Neutral |  5 -&gt; Good |  10 -&gt; Excellent
        /// </summary>
        /// <value>A number representing the standing level the receiver has been added at by the sender. The standing levels are as follows: -10 -&gt; Terrible | -5 -&gt; Bad |  0 -&gt; Neutral |  5 -&gt; Good |  10 -&gt; Excellent</value>
        [DataMember(Name = "standing_level", IsRequired = true, EmitDefaultValue = true)]
        public double StandingLevel { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class CharactersCharacterIdNotificationsContactsGetInner {\n");
            sb.Append("  Message: ").Append(Message).Append("\n");
            sb.Append("  NotificationId: ").Append(NotificationId).Append("\n");
            sb.Append("  SendDate: ").Append(SendDate).Append("\n");
            sb.Append("  SenderCharacterId: ").Append(SenderCharacterId).Append("\n");
            sb.Append("  StandingLevel: ").Append(StandingLevel).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

    }

}
