/*
 * EVE Stable Infrastructure (ESI) - tranquility
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2025-08-26
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using OpenAPIDateConverter = EveESI.Models.Client.OpenAPIDateConverter;

namespace EveESI.Models.Model
{
    /// <summary>
    /// PutFleetsFleetIdMembersMemberIdRequest
    /// </summary>
    [DataContract(Name = "PutFleetsFleetIdMembersMemberId_request")]
    public partial class PutFleetsFleetIdMembersMemberIdRequest
    {
        /// <summary>
        /// If a character is moved to the &#x60;fleet_commander&#x60; role, neither &#x60;wing_id&#x60; or &#x60;squad_id&#x60; should be specified. If a character is moved to the &#x60;wing_commander&#x60; role, only &#x60;wing_id&#x60; should be specified. If a character is moved to the &#x60;squad_commander&#x60; role, both &#x60;wing_id&#x60; and &#x60;squad_id&#x60; should be specified. If a character is moved to the &#x60;squad_member&#x60; role, both &#x60;wing_id&#x60; and &#x60;squad_id&#x60; should be specified.
        /// </summary>
        /// <value>If a character is moved to the &#x60;fleet_commander&#x60; role, neither &#x60;wing_id&#x60; or &#x60;squad_id&#x60; should be specified. If a character is moved to the &#x60;wing_commander&#x60; role, only &#x60;wing_id&#x60; should be specified. If a character is moved to the &#x60;squad_commander&#x60; role, both &#x60;wing_id&#x60; and &#x60;squad_id&#x60; should be specified. If a character is moved to the &#x60;squad_member&#x60; role, both &#x60;wing_id&#x60; and &#x60;squad_id&#x60; should be specified.</value>
        [JsonConverter(typeof(StringEnumConverter))]
        public enum RoleEnum
        {
            /// <summary>
            /// Enum FleetCommander for value: fleet_commander
            /// </summary>
            [EnumMember(Value = "fleet_commander")]
            FleetCommander = 1,

            /// <summary>
            /// Enum WingCommander for value: wing_commander
            /// </summary>
            [EnumMember(Value = "wing_commander")]
            WingCommander = 2,

            /// <summary>
            /// Enum SquadCommander for value: squad_commander
            /// </summary>
            [EnumMember(Value = "squad_commander")]
            SquadCommander = 3,

            /// <summary>
            /// Enum SquadMember for value: squad_member
            /// </summary>
            [EnumMember(Value = "squad_member")]
            SquadMember = 4
        }


        /// <summary>
        /// If a character is moved to the &#x60;fleet_commander&#x60; role, neither &#x60;wing_id&#x60; or &#x60;squad_id&#x60; should be specified. If a character is moved to the &#x60;wing_commander&#x60; role, only &#x60;wing_id&#x60; should be specified. If a character is moved to the &#x60;squad_commander&#x60; role, both &#x60;wing_id&#x60; and &#x60;squad_id&#x60; should be specified. If a character is moved to the &#x60;squad_member&#x60; role, both &#x60;wing_id&#x60; and &#x60;squad_id&#x60; should be specified.
        /// </summary>
        /// <value>If a character is moved to the &#x60;fleet_commander&#x60; role, neither &#x60;wing_id&#x60; or &#x60;squad_id&#x60; should be specified. If a character is moved to the &#x60;wing_commander&#x60; role, only &#x60;wing_id&#x60; should be specified. If a character is moved to the &#x60;squad_commander&#x60; role, both &#x60;wing_id&#x60; and &#x60;squad_id&#x60; should be specified. If a character is moved to the &#x60;squad_member&#x60; role, both &#x60;wing_id&#x60; and &#x60;squad_id&#x60; should be specified.</value>
        [DataMember(Name = "role", IsRequired = true, EmitDefaultValue = true)]
        public RoleEnum Role { get; set; }
        /// <summary>
        /// Initializes a new instance of the <see cref="PutFleetsFleetIdMembersMemberIdRequest" /> class.
        /// </summary>
        [JsonConstructorAttribute]
        protected PutFleetsFleetIdMembersMemberIdRequest() { }
        /// <summary>
        /// Initializes a new instance of the <see cref="PutFleetsFleetIdMembersMemberIdRequest" /> class.
        /// </summary>
        /// <param name="role">If a character is moved to the &#x60;fleet_commander&#x60; role, neither &#x60;wing_id&#x60; or &#x60;squad_id&#x60; should be specified. If a character is moved to the &#x60;wing_commander&#x60; role, only &#x60;wing_id&#x60; should be specified. If a character is moved to the &#x60;squad_commander&#x60; role, both &#x60;wing_id&#x60; and &#x60;squad_id&#x60; should be specified. If a character is moved to the &#x60;squad_member&#x60; role, both &#x60;wing_id&#x60; and &#x60;squad_id&#x60; should be specified. (required).</param>
        /// <param name="squadId">squadId.</param>
        /// <param name="wingId">wingId.</param>
        public PutFleetsFleetIdMembersMemberIdRequest(RoleEnum role = default(RoleEnum), long squadId = default(long), long wingId = default(long))
        {
            this.Role = role;
            this.SquadId = squadId;
            this.WingId = wingId;
        }

        /// <summary>
        /// Gets or Sets SquadId
        /// </summary>
        [DataMember(Name = "squad_id", EmitDefaultValue = false)]
        public long SquadId { get; set; }

        /// <summary>
        /// Gets or Sets WingId
        /// </summary>
        [DataMember(Name = "wing_id", EmitDefaultValue = false)]
        public long WingId { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class PutFleetsFleetIdMembersMemberIdRequest {\n");
            sb.Append("  Role: ").Append(Role).Append("\n");
            sb.Append("  SquadId: ").Append(SquadId).Append("\n");
            sb.Append("  WingId: ").Append(WingId).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

    }

}
