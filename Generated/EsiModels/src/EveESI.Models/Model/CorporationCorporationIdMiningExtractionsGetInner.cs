/*
 * EVE Stable Infrastructure (ESI) - tranquility
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2025-08-26
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using OpenAPIDateConverter = EveESI.Models.Client.OpenAPIDateConverter;

namespace EveESI.Models.Model
{
    /// <summary>
    /// CorporationCorporationIdMiningExtractionsGetInner
    /// </summary>
    [DataContract(Name = "CorporationCorporationIdMiningExtractionsGet_inner")]
    public partial class CorporationCorporationIdMiningExtractionsGetInner
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="CorporationCorporationIdMiningExtractionsGetInner" /> class.
        /// </summary>
        [JsonConstructorAttribute]
        protected CorporationCorporationIdMiningExtractionsGetInner() { }
        /// <summary>
        /// Initializes a new instance of the <see cref="CorporationCorporationIdMiningExtractionsGetInner" /> class.
        /// </summary>
        /// <param name="chunkArrivalTime">The time at which the chunk being extracted will arrive and can be fractured by the moon mining drill.  (required).</param>
        /// <param name="extractionStartTime">The time at which the current extraction was initiated.  (required).</param>
        /// <param name="moonId">moonId (required).</param>
        /// <param name="naturalDecayTime">The time at which the chunk being extracted will naturally fracture if it is not first fractured by the moon mining drill.  (required).</param>
        /// <param name="structureId">structureId (required).</param>
        public CorporationCorporationIdMiningExtractionsGetInner(DateTime chunkArrivalTime = default(DateTime), DateTime extractionStartTime = default(DateTime), long moonId = default(long), DateTime naturalDecayTime = default(DateTime), long structureId = default(long))
        {
            this.ChunkArrivalTime = chunkArrivalTime;
            this.ExtractionStartTime = extractionStartTime;
            this.MoonId = moonId;
            this.NaturalDecayTime = naturalDecayTime;
            this.StructureId = structureId;
        }

        /// <summary>
        /// The time at which the chunk being extracted will arrive and can be fractured by the moon mining drill. 
        /// </summary>
        /// <value>The time at which the chunk being extracted will arrive and can be fractured by the moon mining drill. </value>
        [DataMember(Name = "chunk_arrival_time", IsRequired = true, EmitDefaultValue = true)]
        public DateTime ChunkArrivalTime { get; set; }

        /// <summary>
        /// The time at which the current extraction was initiated. 
        /// </summary>
        /// <value>The time at which the current extraction was initiated. </value>
        [DataMember(Name = "extraction_start_time", IsRequired = true, EmitDefaultValue = true)]
        public DateTime ExtractionStartTime { get; set; }

        /// <summary>
        /// Gets or Sets MoonId
        /// </summary>
        [DataMember(Name = "moon_id", IsRequired = true, EmitDefaultValue = true)]
        public long MoonId { get; set; }

        /// <summary>
        /// The time at which the chunk being extracted will naturally fracture if it is not first fractured by the moon mining drill. 
        /// </summary>
        /// <value>The time at which the chunk being extracted will naturally fracture if it is not first fractured by the moon mining drill. </value>
        [DataMember(Name = "natural_decay_time", IsRequired = true, EmitDefaultValue = true)]
        public DateTime NaturalDecayTime { get; set; }

        /// <summary>
        /// Gets or Sets StructureId
        /// </summary>
        [DataMember(Name = "structure_id", IsRequired = true, EmitDefaultValue = true)]
        public long StructureId { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class CorporationCorporationIdMiningExtractionsGetInner {\n");
            sb.Append("  ChunkArrivalTime: ").Append(ChunkArrivalTime).Append("\n");
            sb.Append("  ExtractionStartTime: ").Append(ExtractionStartTime).Append("\n");
            sb.Append("  MoonId: ").Append(MoonId).Append("\n");
            sb.Append("  NaturalDecayTime: ").Append(NaturalDecayTime).Append("\n");
            sb.Append("  StructureId: ").Append(StructureId).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

    }

}
