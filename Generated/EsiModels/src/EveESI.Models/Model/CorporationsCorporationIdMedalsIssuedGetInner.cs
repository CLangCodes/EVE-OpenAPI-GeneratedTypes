/*
 * EVE Stable Infrastructure (ESI) - tranquility
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2025-08-26
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using OpenAPIDateConverter = EveESI.Models.Client.OpenAPIDateConverter;

namespace EveESI.Models.Model
{
    /// <summary>
    /// CorporationsCorporationIdMedalsIssuedGetInner
    /// </summary>
    [DataContract(Name = "CorporationsCorporationIdMedalsIssuedGet_inner")]
    public partial class CorporationsCorporationIdMedalsIssuedGetInner
    {
        /// <summary>
        /// Defines Status
        /// </summary>
        [JsonConverter(typeof(StringEnumConverter))]
        public enum StatusEnum
        {
            /// <summary>
            /// Enum Private for value: private
            /// </summary>
            [EnumMember(Value = "private")]
            Private = 1,

            /// <summary>
            /// Enum Public for value: public
            /// </summary>
            [EnumMember(Value = "public")]
            Public = 2
        }


        /// <summary>
        /// Gets or Sets Status
        /// </summary>
        [DataMember(Name = "status", IsRequired = true, EmitDefaultValue = true)]
        public StatusEnum Status { get; set; }
        /// <summary>
        /// Initializes a new instance of the <see cref="CorporationsCorporationIdMedalsIssuedGetInner" /> class.
        /// </summary>
        [JsonConstructorAttribute]
        protected CorporationsCorporationIdMedalsIssuedGetInner() { }
        /// <summary>
        /// Initializes a new instance of the <see cref="CorporationsCorporationIdMedalsIssuedGetInner" /> class.
        /// </summary>
        /// <param name="characterId">ID of the character who was rewarded this medal (required).</param>
        /// <param name="issuedAt">issuedAt (required).</param>
        /// <param name="issuerId">ID of the character who issued the medal (required).</param>
        /// <param name="medalId">medalId (required).</param>
        /// <param name="reason">reason (required).</param>
        /// <param name="status">status (required).</param>
        public CorporationsCorporationIdMedalsIssuedGetInner(long characterId = default(long), DateTime issuedAt = default(DateTime), long issuerId = default(long), long medalId = default(long), string reason = default(string), StatusEnum status = default(StatusEnum))
        {
            this.CharacterId = characterId;
            this.IssuedAt = issuedAt;
            this.IssuerId = issuerId;
            this.MedalId = medalId;
            // to ensure "reason" is required (not null)
            if (reason == null)
            {
                throw new ArgumentNullException("reason is a required property for CorporationsCorporationIdMedalsIssuedGetInner and cannot be null");
            }
            this.Reason = reason;
            this.Status = status;
        }

        /// <summary>
        /// ID of the character who was rewarded this medal
        /// </summary>
        /// <value>ID of the character who was rewarded this medal</value>
        [DataMember(Name = "character_id", IsRequired = true, EmitDefaultValue = true)]
        public long CharacterId { get; set; }

        /// <summary>
        /// Gets or Sets IssuedAt
        /// </summary>
        [DataMember(Name = "issued_at", IsRequired = true, EmitDefaultValue = true)]
        public DateTime IssuedAt { get; set; }

        /// <summary>
        /// ID of the character who issued the medal
        /// </summary>
        /// <value>ID of the character who issued the medal</value>
        [DataMember(Name = "issuer_id", IsRequired = true, EmitDefaultValue = true)]
        public long IssuerId { get; set; }

        /// <summary>
        /// Gets or Sets MedalId
        /// </summary>
        [DataMember(Name = "medal_id", IsRequired = true, EmitDefaultValue = true)]
        public long MedalId { get; set; }

        /// <summary>
        /// Gets or Sets Reason
        /// </summary>
        [DataMember(Name = "reason", IsRequired = true, EmitDefaultValue = true)]
        public string Reason { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class CorporationsCorporationIdMedalsIssuedGetInner {\n");
            sb.Append("  CharacterId: ").Append(CharacterId).Append("\n");
            sb.Append("  IssuedAt: ").Append(IssuedAt).Append("\n");
            sb.Append("  IssuerId: ").Append(IssuerId).Append("\n");
            sb.Append("  MedalId: ").Append(MedalId).Append("\n");
            sb.Append("  Reason: ").Append(Reason).Append("\n");
            sb.Append("  Status: ").Append(Status).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

    }

}
