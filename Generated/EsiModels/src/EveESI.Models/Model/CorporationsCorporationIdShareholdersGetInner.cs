/*
 * EVE Stable Infrastructure (ESI) - tranquility
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2025-08-26
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using OpenAPIDateConverter = EveESI.Models.Client.OpenAPIDateConverter;

namespace EveESI.Models.Model
{
    /// <summary>
    /// CorporationsCorporationIdShareholdersGetInner
    /// </summary>
    [DataContract(Name = "CorporationsCorporationIdShareholdersGet_inner")]
    public partial class CorporationsCorporationIdShareholdersGetInner
    {
        /// <summary>
        /// Defines ShareholderType
        /// </summary>
        [JsonConverter(typeof(StringEnumConverter))]
        public enum ShareholderTypeEnum
        {
            /// <summary>
            /// Enum Character for value: character
            /// </summary>
            [EnumMember(Value = "character")]
            Character = 1,

            /// <summary>
            /// Enum Corporation for value: corporation
            /// </summary>
            [EnumMember(Value = "corporation")]
            Corporation = 2
        }


        /// <summary>
        /// Gets or Sets ShareholderType
        /// </summary>
        [DataMember(Name = "shareholder_type", IsRequired = true, EmitDefaultValue = true)]
        public ShareholderTypeEnum ShareholderType { get; set; }
        /// <summary>
        /// Initializes a new instance of the <see cref="CorporationsCorporationIdShareholdersGetInner" /> class.
        /// </summary>
        [JsonConstructorAttribute]
        protected CorporationsCorporationIdShareholdersGetInner() { }
        /// <summary>
        /// Initializes a new instance of the <see cref="CorporationsCorporationIdShareholdersGetInner" /> class.
        /// </summary>
        /// <param name="shareCount">shareCount (required).</param>
        /// <param name="shareholderId">shareholderId (required).</param>
        /// <param name="shareholderType">shareholderType (required).</param>
        public CorporationsCorporationIdShareholdersGetInner(long shareCount = default(long), long shareholderId = default(long), ShareholderTypeEnum shareholderType = default(ShareholderTypeEnum))
        {
            this.ShareCount = shareCount;
            this.ShareholderId = shareholderId;
            this.ShareholderType = shareholderType;
        }

        /// <summary>
        /// Gets or Sets ShareCount
        /// </summary>
        [DataMember(Name = "share_count", IsRequired = true, EmitDefaultValue = true)]
        public long ShareCount { get; set; }

        /// <summary>
        /// Gets or Sets ShareholderId
        /// </summary>
        [DataMember(Name = "shareholder_id", IsRequired = true, EmitDefaultValue = true)]
        public long ShareholderId { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class CorporationsCorporationIdShareholdersGetInner {\n");
            sb.Append("  ShareCount: ").Append(ShareCount).Append("\n");
            sb.Append("  ShareholderId: ").Append(ShareholderId).Append("\n");
            sb.Append("  ShareholderType: ").Append(ShareholderType).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

    }

}
