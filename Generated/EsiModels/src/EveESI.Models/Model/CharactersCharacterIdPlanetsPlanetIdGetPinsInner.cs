/*
 * EVE Stable Infrastructure (ESI) - tranquility
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2025-08-26
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using OpenAPIDateConverter = EveESI.Models.Client.OpenAPIDateConverter;

namespace EveESI.Models.Model
{
    /// <summary>
    /// pin object
    /// </summary>
    [DataContract(Name = "CharactersCharacterIdPlanetsPlanetIdGet_pins_inner")]
    public partial class CharactersCharacterIdPlanetsPlanetIdGetPinsInner
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="CharactersCharacterIdPlanetsPlanetIdGetPinsInner" /> class.
        /// </summary>
        [JsonConstructorAttribute]
        protected CharactersCharacterIdPlanetsPlanetIdGetPinsInner() { }
        /// <summary>
        /// Initializes a new instance of the <see cref="CharactersCharacterIdPlanetsPlanetIdGetPinsInner" /> class.
        /// </summary>
        /// <param name="contents">contents.</param>
        /// <param name="expiryTime">expiryTime.</param>
        /// <param name="extractorDetails">extractorDetails.</param>
        /// <param name="factoryDetails">factoryDetails.</param>
        /// <param name="installTime">installTime.</param>
        /// <param name="lastCycleStart">lastCycleStart.</param>
        /// <param name="latitude">latitude (required).</param>
        /// <param name="longitude">longitude (required).</param>
        /// <param name="pinId">pinId (required).</param>
        /// <param name="schematicId">schematicId.</param>
        /// <param name="typeId">typeId (required).</param>
        public CharactersCharacterIdPlanetsPlanetIdGetPinsInner(List<CharactersCharacterIdPlanetsPlanetIdGetPinsInnerContentsInner> contents = default(List<CharactersCharacterIdPlanetsPlanetIdGetPinsInnerContentsInner>), DateTime expiryTime = default(DateTime), CharactersCharacterIdPlanetsPlanetIdGetPinsInnerExtractorDetails extractorDetails = default(CharactersCharacterIdPlanetsPlanetIdGetPinsInnerExtractorDetails), CharactersCharacterIdPlanetsPlanetIdGetPinsInnerFactoryDetails factoryDetails = default(CharactersCharacterIdPlanetsPlanetIdGetPinsInnerFactoryDetails), DateTime installTime = default(DateTime), DateTime lastCycleStart = default(DateTime), double latitude = default(double), double longitude = default(double), long pinId = default(long), long schematicId = default(long), long typeId = default(long))
        {
            this.Latitude = latitude;
            this.Longitude = longitude;
            this.PinId = pinId;
            this.TypeId = typeId;
            this.Contents = contents;
            this.ExpiryTime = expiryTime;
            this.ExtractorDetails = extractorDetails;
            this.FactoryDetails = factoryDetails;
            this.InstallTime = installTime;
            this.LastCycleStart = lastCycleStart;
            this.SchematicId = schematicId;
        }

        /// <summary>
        /// Gets or Sets Contents
        /// </summary>
        [DataMember(Name = "contents", EmitDefaultValue = false)]
        public List<CharactersCharacterIdPlanetsPlanetIdGetPinsInnerContentsInner> Contents { get; set; }

        /// <summary>
        /// Gets or Sets ExpiryTime
        /// </summary>
        [DataMember(Name = "expiry_time", EmitDefaultValue = false)]
        public DateTime ExpiryTime { get; set; }

        /// <summary>
        /// Gets or Sets ExtractorDetails
        /// </summary>
        [DataMember(Name = "extractor_details", EmitDefaultValue = false)]
        public CharactersCharacterIdPlanetsPlanetIdGetPinsInnerExtractorDetails ExtractorDetails { get; set; }

        /// <summary>
        /// Gets or Sets FactoryDetails
        /// </summary>
        [DataMember(Name = "factory_details", EmitDefaultValue = false)]
        public CharactersCharacterIdPlanetsPlanetIdGetPinsInnerFactoryDetails FactoryDetails { get; set; }

        /// <summary>
        /// Gets or Sets InstallTime
        /// </summary>
        [DataMember(Name = "install_time", EmitDefaultValue = false)]
        public DateTime InstallTime { get; set; }

        /// <summary>
        /// Gets or Sets LastCycleStart
        /// </summary>
        [DataMember(Name = "last_cycle_start", EmitDefaultValue = false)]
        public DateTime LastCycleStart { get; set; }

        /// <summary>
        /// Gets or Sets Latitude
        /// </summary>
        [DataMember(Name = "latitude", IsRequired = true, EmitDefaultValue = true)]
        public double Latitude { get; set; }

        /// <summary>
        /// Gets or Sets Longitude
        /// </summary>
        [DataMember(Name = "longitude", IsRequired = true, EmitDefaultValue = true)]
        public double Longitude { get; set; }

        /// <summary>
        /// Gets or Sets PinId
        /// </summary>
        [DataMember(Name = "pin_id", IsRequired = true, EmitDefaultValue = true)]
        public long PinId { get; set; }

        /// <summary>
        /// Gets or Sets SchematicId
        /// </summary>
        [DataMember(Name = "schematic_id", EmitDefaultValue = false)]
        public long SchematicId { get; set; }

        /// <summary>
        /// Gets or Sets TypeId
        /// </summary>
        [DataMember(Name = "type_id", IsRequired = true, EmitDefaultValue = true)]
        public long TypeId { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class CharactersCharacterIdPlanetsPlanetIdGetPinsInner {\n");
            sb.Append("  Contents: ").Append(Contents).Append("\n");
            sb.Append("  ExpiryTime: ").Append(ExpiryTime).Append("\n");
            sb.Append("  ExtractorDetails: ").Append(ExtractorDetails).Append("\n");
            sb.Append("  FactoryDetails: ").Append(FactoryDetails).Append("\n");
            sb.Append("  InstallTime: ").Append(InstallTime).Append("\n");
            sb.Append("  LastCycleStart: ").Append(LastCycleStart).Append("\n");
            sb.Append("  Latitude: ").Append(Latitude).Append("\n");
            sb.Append("  Longitude: ").Append(Longitude).Append("\n");
            sb.Append("  PinId: ").Append(PinId).Append("\n");
            sb.Append("  SchematicId: ").Append(SchematicId).Append("\n");
            sb.Append("  TypeId: ").Append(TypeId).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

    }

}
