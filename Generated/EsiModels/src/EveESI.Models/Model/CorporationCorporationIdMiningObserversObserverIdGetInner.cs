/*
 * EVE Stable Infrastructure (ESI) - tranquility
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2025-08-26
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using OpenAPIDateConverter = EveESI.Models.Client.OpenAPIDateConverter;

namespace EveESI.Models.Model
{
    /// <summary>
    /// CorporationCorporationIdMiningObserversObserverIdGetInner
    /// </summary>
    [DataContract(Name = "CorporationCorporationIdMiningObserversObserverIdGet_inner")]
    public partial class CorporationCorporationIdMiningObserversObserverIdGetInner
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="CorporationCorporationIdMiningObserversObserverIdGetInner" /> class.
        /// </summary>
        [JsonConstructorAttribute]
        protected CorporationCorporationIdMiningObserversObserverIdGetInner() { }
        /// <summary>
        /// Initializes a new instance of the <see cref="CorporationCorporationIdMiningObserversObserverIdGetInner" /> class.
        /// </summary>
        /// <param name="characterId">The character that did the mining  (required).</param>
        /// <param name="lastUpdated">lastUpdated (required).</param>
        /// <param name="quantity">quantity (required).</param>
        /// <param name="recordedCorporationId">The corporation id of the character at the time data was recorded.  (required).</param>
        /// <param name="typeId">typeId (required).</param>
        public CorporationCorporationIdMiningObserversObserverIdGetInner(long characterId = default(long), DateOnly lastUpdated = default(DateOnly), long quantity = default(long), long recordedCorporationId = default(long), long typeId = default(long))
        {
            this.CharacterId = characterId;
            // to ensure "lastUpdated" is required (not null)
            if (lastUpdated == null)
            {
                throw new ArgumentNullException("lastUpdated is a required property for CorporationCorporationIdMiningObserversObserverIdGetInner and cannot be null");
            }
            this.LastUpdated = lastUpdated;
            this.Quantity = quantity;
            this.RecordedCorporationId = recordedCorporationId;
            this.TypeId = typeId;
        }

        /// <summary>
        /// The character that did the mining 
        /// </summary>
        /// <value>The character that did the mining </value>
        [DataMember(Name = "character_id", IsRequired = true, EmitDefaultValue = true)]
        public long CharacterId { get; set; }

        /// <summary>
        /// Gets or Sets LastUpdated
        /// </summary>
        [DataMember(Name = "last_updated", IsRequired = true, EmitDefaultValue = true)]
        [JsonConverter(typeof(OpenAPIDateConverter))]
        public DateOnly LastUpdated { get; set; }

        /// <summary>
        /// Gets or Sets Quantity
        /// </summary>
        [DataMember(Name = "quantity", IsRequired = true, EmitDefaultValue = true)]
        public long Quantity { get; set; }

        /// <summary>
        /// The corporation id of the character at the time data was recorded. 
        /// </summary>
        /// <value>The corporation id of the character at the time data was recorded. </value>
        [DataMember(Name = "recorded_corporation_id", IsRequired = true, EmitDefaultValue = true)]
        public long RecordedCorporationId { get; set; }

        /// <summary>
        /// Gets or Sets TypeId
        /// </summary>
        [DataMember(Name = "type_id", IsRequired = true, EmitDefaultValue = true)]
        public long TypeId { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class CorporationCorporationIdMiningObserversObserverIdGetInner {\n");
            sb.Append("  CharacterId: ").Append(CharacterId).Append("\n");
            sb.Append("  LastUpdated: ").Append(LastUpdated).Append("\n");
            sb.Append("  Quantity: ").Append(Quantity).Append("\n");
            sb.Append("  RecordedCorporationId: ").Append(RecordedCorporationId).Append("\n");
            sb.Append("  TypeId: ").Append(TypeId).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

    }

}
