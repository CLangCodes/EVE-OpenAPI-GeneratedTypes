/*
 * EVE Stable Infrastructure (ESI) - tranquility
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2025-08-26
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using OpenAPIDateConverter = EveESI.Models.Client.OpenAPIDateConverter;

namespace EveESI.Models.Model
{
    /// <summary>
    /// CharactersCharacterIdClonesGet
    /// </summary>
    [DataContract(Name = "CharactersCharacterIdClonesGet")]
    public partial class CharactersCharacterIdClonesGet
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="CharactersCharacterIdClonesGet" /> class.
        /// </summary>
        [JsonConstructorAttribute]
        protected CharactersCharacterIdClonesGet() { }
        /// <summary>
        /// Initializes a new instance of the <see cref="CharactersCharacterIdClonesGet" /> class.
        /// </summary>
        /// <param name="homeLocation">homeLocation.</param>
        /// <param name="jumpClones">jumpClones (required).</param>
        /// <param name="lastCloneJumpDate">lastCloneJumpDate.</param>
        /// <param name="lastStationChangeDate">lastStationChangeDate.</param>
        public CharactersCharacterIdClonesGet(CharactersCharacterIdClonesGetHomeLocation homeLocation = default(CharactersCharacterIdClonesGetHomeLocation), List<CharactersCharacterIdClonesGetJumpClonesInner> jumpClones = default(List<CharactersCharacterIdClonesGetJumpClonesInner>), DateTime lastCloneJumpDate = default(DateTime), DateTime lastStationChangeDate = default(DateTime))
        {
            // to ensure "jumpClones" is required (not null)
            if (jumpClones == null)
            {
                throw new ArgumentNullException("jumpClones is a required property for CharactersCharacterIdClonesGet and cannot be null");
            }
            this.JumpClones = jumpClones;
            this.HomeLocation = homeLocation;
            this.LastCloneJumpDate = lastCloneJumpDate;
            this.LastStationChangeDate = lastStationChangeDate;
        }

        /// <summary>
        /// Gets or Sets HomeLocation
        /// </summary>
        [DataMember(Name = "home_location", EmitDefaultValue = false)]
        public CharactersCharacterIdClonesGetHomeLocation HomeLocation { get; set; }

        /// <summary>
        /// Gets or Sets JumpClones
        /// </summary>
        [DataMember(Name = "jump_clones", IsRequired = true, EmitDefaultValue = true)]
        public List<CharactersCharacterIdClonesGetJumpClonesInner> JumpClones { get; set; }

        /// <summary>
        /// Gets or Sets LastCloneJumpDate
        /// </summary>
        [DataMember(Name = "last_clone_jump_date", EmitDefaultValue = false)]
        public DateTime LastCloneJumpDate { get; set; }

        /// <summary>
        /// Gets or Sets LastStationChangeDate
        /// </summary>
        [DataMember(Name = "last_station_change_date", EmitDefaultValue = false)]
        public DateTime LastStationChangeDate { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class CharactersCharacterIdClonesGet {\n");
            sb.Append("  HomeLocation: ").Append(HomeLocation).Append("\n");
            sb.Append("  JumpClones: ").Append(JumpClones).Append("\n");
            sb.Append("  LastCloneJumpDate: ").Append(LastCloneJumpDate).Append("\n");
            sb.Append("  LastStationChangeDate: ").Append(LastStationChangeDate).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

    }

}
