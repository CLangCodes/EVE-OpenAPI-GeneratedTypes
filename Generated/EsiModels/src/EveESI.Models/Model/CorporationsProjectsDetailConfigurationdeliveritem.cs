/*
 * EVE Stable Infrastructure (ESI) - tranquility
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2025-08-26
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using OpenAPIDateConverter = EveESI.Models.Client.OpenAPIDateConverter;

namespace EveESI.Models.Model
{
    /// <summary>
    /// CorporationsProjectsDetailConfigurationdeliveritem
    /// </summary>
    [DataContract(Name = "CorporationsProjectsDetailConfigurationdeliveritem")]
    public partial class CorporationsProjectsDetailConfigurationdeliveritem
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="CorporationsProjectsDetailConfigurationdeliveritem" /> class.
        /// </summary>
        /// <param name="dockingLocations">Docking location to deliver to.</param>
        /// <param name="items">Item to deliver.</param>
        /// <param name="officeId">officeId.</param>
        public CorporationsProjectsDetailConfigurationdeliveritem(List<CorporationsProjectsDetailConfigurationdeliveritemDockingLocationsInner> dockingLocations = default(List<CorporationsProjectsDetailConfigurationdeliveritemDockingLocationsInner>), List<CorporationsProjectsDetailConfigurationdeliveritemItemsInner> items = default(List<CorporationsProjectsDetailConfigurationdeliveritemItemsInner>), long officeId = default(long))
        {
            this.DockingLocations = dockingLocations;
            this.Items = items;
            this.OfficeId = officeId;
        }

        /// <summary>
        /// Docking location to deliver to
        /// </summary>
        /// <value>Docking location to deliver to</value>
        [DataMember(Name = "docking_locations", EmitDefaultValue = false)]
        public List<CorporationsProjectsDetailConfigurationdeliveritemDockingLocationsInner> DockingLocations { get; set; }

        /// <summary>
        /// Item to deliver
        /// </summary>
        /// <value>Item to deliver</value>
        [DataMember(Name = "items", EmitDefaultValue = false)]
        public List<CorporationsProjectsDetailConfigurationdeliveritemItemsInner> Items { get; set; }

        /// <summary>
        /// Gets or Sets OfficeId
        /// </summary>
        [DataMember(Name = "office_id", EmitDefaultValue = false)]
        public long OfficeId { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class CorporationsProjectsDetailConfigurationdeliveritem {\n");
            sb.Append("  DockingLocations: ").Append(DockingLocations).Append("\n");
            sb.Append("  Items: ").Append(Items).Append("\n");
            sb.Append("  OfficeId: ").Append(OfficeId).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

    }

}
