/*
 * EVE Stable Infrastructure (ESI) - tranquility
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2025-08-26
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using OpenAPIDateConverter = EveESI.Models.Client.OpenAPIDateConverter;

namespace EveESI.Models.Model
{
    /// <summary>
    /// Summary of kills done by the given corporation against enemy factions
    /// </summary>
    [DataContract(Name = "CorporationsCorporationIdFwStatsGet_kills")]
    public partial class CorporationsCorporationIdFwStatsGetKills
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="CorporationsCorporationIdFwStatsGetKills" /> class.
        /// </summary>
        [JsonConstructorAttribute]
        protected CorporationsCorporationIdFwStatsGetKills() { }
        /// <summary>
        /// Initializes a new instance of the <see cref="CorporationsCorporationIdFwStatsGetKills" /> class.
        /// </summary>
        /// <param name="lastWeek">Last week&#39;s total number of kills by members of the given corporation against enemy factions (required).</param>
        /// <param name="total">Total number of kills by members of the given corporation against enemy factions since the corporation enlisted (required).</param>
        /// <param name="yesterday">Yesterday&#39;s total number of kills by members of the given corporation against enemy factions (required).</param>
        public CorporationsCorporationIdFwStatsGetKills(long lastWeek = default(long), long total = default(long), long yesterday = default(long))
        {
            this.LastWeek = lastWeek;
            this.Total = total;
            this.Yesterday = yesterday;
        }

        /// <summary>
        /// Last week&#39;s total number of kills by members of the given corporation against enemy factions
        /// </summary>
        /// <value>Last week&#39;s total number of kills by members of the given corporation against enemy factions</value>
        [DataMember(Name = "last_week", IsRequired = true, EmitDefaultValue = true)]
        public long LastWeek { get; set; }

        /// <summary>
        /// Total number of kills by members of the given corporation against enemy factions since the corporation enlisted
        /// </summary>
        /// <value>Total number of kills by members of the given corporation against enemy factions since the corporation enlisted</value>
        [DataMember(Name = "total", IsRequired = true, EmitDefaultValue = true)]
        public long Total { get; set; }

        /// <summary>
        /// Yesterday&#39;s total number of kills by members of the given corporation against enemy factions
        /// </summary>
        /// <value>Yesterday&#39;s total number of kills by members of the given corporation against enemy factions</value>
        [DataMember(Name = "yesterday", IsRequired = true, EmitDefaultValue = true)]
        public long Yesterday { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class CorporationsCorporationIdFwStatsGetKills {\n");
            sb.Append("  LastWeek: ").Append(LastWeek).Append("\n");
            sb.Append("  Total: ").Append(Total).Append("\n");
            sb.Append("  Yesterday: ").Append(Yesterday).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

    }

}
