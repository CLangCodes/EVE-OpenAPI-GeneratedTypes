/*
 * EVE Stable Infrastructure (ESI) - tranquility
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2025-08-26
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using OpenAPIDateConverter = EveESI.Models.Client.OpenAPIDateConverter;

namespace EveESI.Models.Model
{
    /// <summary>
    /// MarketsRegionIdHistoryGetInner
    /// </summary>
    [DataContract(Name = "MarketsRegionIdHistoryGet_inner")]
    public partial class MarketsRegionIdHistoryGetInner
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="MarketsRegionIdHistoryGetInner" /> class.
        /// </summary>
        [JsonConstructorAttribute]
        protected MarketsRegionIdHistoryGetInner() { }
        /// <summary>
        /// Initializes a new instance of the <see cref="MarketsRegionIdHistoryGetInner" /> class.
        /// </summary>
        /// <param name="average">average (required).</param>
        /// <param name="date">The date of this historical statistic entry (required).</param>
        /// <param name="highest">highest (required).</param>
        /// <param name="lowest">lowest (required).</param>
        /// <param name="orderCount">Total number of orders happened that day (required).</param>
        /// <param name="volume">Total (required).</param>
        public MarketsRegionIdHistoryGetInner(double average = default(double), DateOnly date = default(DateOnly), double highest = default(double), double lowest = default(double), long orderCount = default(long), long volume = default(long))
        {
            this.Average = average;
            // to ensure "date" is required (not null)
            if (date == null)
            {
                throw new ArgumentNullException("date is a required property for MarketsRegionIdHistoryGetInner and cannot be null");
            }
            this.Date = date;
            this.Highest = highest;
            this.Lowest = lowest;
            this.OrderCount = orderCount;
            this.Volume = volume;
        }

        /// <summary>
        /// Gets or Sets Average
        /// </summary>
        [DataMember(Name = "average", IsRequired = true, EmitDefaultValue = true)]
        public double Average { get; set; }

        /// <summary>
        /// The date of this historical statistic entry
        /// </summary>
        /// <value>The date of this historical statistic entry</value>
        [DataMember(Name = "date", IsRequired = true, EmitDefaultValue = true)]
        [JsonConverter(typeof(OpenAPIDateConverter))]
        public DateOnly Date { get; set; }

        /// <summary>
        /// Gets or Sets Highest
        /// </summary>
        [DataMember(Name = "highest", IsRequired = true, EmitDefaultValue = true)]
        public double Highest { get; set; }

        /// <summary>
        /// Gets or Sets Lowest
        /// </summary>
        [DataMember(Name = "lowest", IsRequired = true, EmitDefaultValue = true)]
        public double Lowest { get; set; }

        /// <summary>
        /// Total number of orders happened that day
        /// </summary>
        /// <value>Total number of orders happened that day</value>
        [DataMember(Name = "order_count", IsRequired = true, EmitDefaultValue = true)]
        public long OrderCount { get; set; }

        /// <summary>
        /// Total
        /// </summary>
        /// <value>Total</value>
        [DataMember(Name = "volume", IsRequired = true, EmitDefaultValue = true)]
        public long Volume { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class MarketsRegionIdHistoryGetInner {\n");
            sb.Append("  Average: ").Append(Average).Append("\n");
            sb.Append("  Date: ").Append(Date).Append("\n");
            sb.Append("  Highest: ").Append(Highest).Append("\n");
            sb.Append("  Lowest: ").Append(Lowest).Append("\n");
            sb.Append("  OrderCount: ").Append(OrderCount).Append("\n");
            sb.Append("  Volume: ").Append(Volume).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

    }

}
