/*
 * EVE Stable Infrastructure (ESI) - tranquility
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2025-08-26
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using OpenAPIDateConverter = EveESI.Models.Client.OpenAPIDateConverter;

namespace EveESI.Models.Model
{
    /// <summary>
    /// CharactersCharacterIdAgentsResearchGetInner
    /// </summary>
    [DataContract(Name = "CharactersCharacterIdAgentsResearchGet_inner")]
    public partial class CharactersCharacterIdAgentsResearchGetInner
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="CharactersCharacterIdAgentsResearchGetInner" /> class.
        /// </summary>
        [JsonConstructorAttribute]
        protected CharactersCharacterIdAgentsResearchGetInner() { }
        /// <summary>
        /// Initializes a new instance of the <see cref="CharactersCharacterIdAgentsResearchGetInner" /> class.
        /// </summary>
        /// <param name="agentId">agentId (required).</param>
        /// <param name="pointsPerDay">pointsPerDay (required).</param>
        /// <param name="remainderPoints">remainderPoints (required).</param>
        /// <param name="skillTypeId">skillTypeId (required).</param>
        /// <param name="startedAt">startedAt (required).</param>
        public CharactersCharacterIdAgentsResearchGetInner(long agentId = default(long), double pointsPerDay = default(double), double remainderPoints = default(double), long skillTypeId = default(long), DateTime startedAt = default(DateTime))
        {
            this.AgentId = agentId;
            this.PointsPerDay = pointsPerDay;
            this.RemainderPoints = remainderPoints;
            this.SkillTypeId = skillTypeId;
            this.StartedAt = startedAt;
        }

        /// <summary>
        /// Gets or Sets AgentId
        /// </summary>
        [DataMember(Name = "agent_id", IsRequired = true, EmitDefaultValue = true)]
        public long AgentId { get; set; }

        /// <summary>
        /// Gets or Sets PointsPerDay
        /// </summary>
        [DataMember(Name = "points_per_day", IsRequired = true, EmitDefaultValue = true)]
        public double PointsPerDay { get; set; }

        /// <summary>
        /// Gets or Sets RemainderPoints
        /// </summary>
        [DataMember(Name = "remainder_points", IsRequired = true, EmitDefaultValue = true)]
        public double RemainderPoints { get; set; }

        /// <summary>
        /// Gets or Sets SkillTypeId
        /// </summary>
        [DataMember(Name = "skill_type_id", IsRequired = true, EmitDefaultValue = true)]
        public long SkillTypeId { get; set; }

        /// <summary>
        /// Gets or Sets StartedAt
        /// </summary>
        [DataMember(Name = "started_at", IsRequired = true, EmitDefaultValue = true)]
        public DateTime StartedAt { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class CharactersCharacterIdAgentsResearchGetInner {\n");
            sb.Append("  AgentId: ").Append(AgentId).Append("\n");
            sb.Append("  PointsPerDay: ").Append(PointsPerDay).Append("\n");
            sb.Append("  RemainderPoints: ").Append(RemainderPoints).Append("\n");
            sb.Append("  SkillTypeId: ").Append(SkillTypeId).Append("\n");
            sb.Append("  StartedAt: ").Append(StartedAt).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

    }

}
