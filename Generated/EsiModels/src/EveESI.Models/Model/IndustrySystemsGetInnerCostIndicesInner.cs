/*
 * EVE Stable Infrastructure (ESI) - tranquility
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2025-08-26
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using OpenAPIDateConverter = EveESI.Models.Client.OpenAPIDateConverter;

namespace EveESI.Models.Model
{
    /// <summary>
    /// cost_indice object
    /// </summary>
    [DataContract(Name = "IndustrySystemsGet_inner_cost_indices_inner")]
    public partial class IndustrySystemsGetInnerCostIndicesInner
    {
        /// <summary>
        /// Defines Activity
        /// </summary>
        [JsonConverter(typeof(StringEnumConverter))]
        public enum ActivityEnum
        {
            /// <summary>
            /// Enum Copying for value: copying
            /// </summary>
            [EnumMember(Value = "copying")]
            Copying = 1,

            /// <summary>
            /// Enum Duplicating for value: duplicating
            /// </summary>
            [EnumMember(Value = "duplicating")]
            Duplicating = 2,

            /// <summary>
            /// Enum Invention for value: invention
            /// </summary>
            [EnumMember(Value = "invention")]
            Invention = 3,

            /// <summary>
            /// Enum Manufacturing for value: manufacturing
            /// </summary>
            [EnumMember(Value = "manufacturing")]
            Manufacturing = 4,

            /// <summary>
            /// Enum None for value: none
            /// </summary>
            [EnumMember(Value = "none")]
            None = 5,

            /// <summary>
            /// Enum Reaction for value: reaction
            /// </summary>
            [EnumMember(Value = "reaction")]
            Reaction = 6,

            /// <summary>
            /// Enum ResearchingMaterialEfficiency for value: researching_material_efficiency
            /// </summary>
            [EnumMember(Value = "researching_material_efficiency")]
            ResearchingMaterialEfficiency = 7,

            /// <summary>
            /// Enum ResearchingTechnology for value: researching_technology
            /// </summary>
            [EnumMember(Value = "researching_technology")]
            ResearchingTechnology = 8,

            /// <summary>
            /// Enum ResearchingTimeEfficiency for value: researching_time_efficiency
            /// </summary>
            [EnumMember(Value = "researching_time_efficiency")]
            ResearchingTimeEfficiency = 9,

            /// <summary>
            /// Enum ReverseEngineering for value: reverse_engineering
            /// </summary>
            [EnumMember(Value = "reverse_engineering")]
            ReverseEngineering = 10
        }


        /// <summary>
        /// Gets or Sets Activity
        /// </summary>
        [DataMember(Name = "activity", IsRequired = true, EmitDefaultValue = true)]
        public ActivityEnum Activity { get; set; }
        /// <summary>
        /// Initializes a new instance of the <see cref="IndustrySystemsGetInnerCostIndicesInner" /> class.
        /// </summary>
        [JsonConstructorAttribute]
        protected IndustrySystemsGetInnerCostIndicesInner() { }
        /// <summary>
        /// Initializes a new instance of the <see cref="IndustrySystemsGetInnerCostIndicesInner" /> class.
        /// </summary>
        /// <param name="activity">activity (required).</param>
        /// <param name="costIndex">costIndex (required).</param>
        public IndustrySystemsGetInnerCostIndicesInner(ActivityEnum activity = default(ActivityEnum), double costIndex = default(double))
        {
            this.Activity = activity;
            this.CostIndex = costIndex;
        }

        /// <summary>
        /// Gets or Sets CostIndex
        /// </summary>
        [DataMember(Name = "cost_index", IsRequired = true, EmitDefaultValue = true)]
        public double CostIndex { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class IndustrySystemsGetInnerCostIndicesInner {\n");
            sb.Append("  Activity: ").Append(Activity).Append("\n");
            sb.Append("  CostIndex: ").Append(CostIndex).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

    }

}
