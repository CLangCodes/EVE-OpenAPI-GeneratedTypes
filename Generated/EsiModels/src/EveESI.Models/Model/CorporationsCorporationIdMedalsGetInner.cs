/*
 * EVE Stable Infrastructure (ESI) - tranquility
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2025-08-26
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using OpenAPIDateConverter = EveESI.Models.Client.OpenAPIDateConverter;

namespace EveESI.Models.Model
{
    /// <summary>
    /// CorporationsCorporationIdMedalsGetInner
    /// </summary>
    [DataContract(Name = "CorporationsCorporationIdMedalsGet_inner")]
    public partial class CorporationsCorporationIdMedalsGetInner
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="CorporationsCorporationIdMedalsGetInner" /> class.
        /// </summary>
        [JsonConstructorAttribute]
        protected CorporationsCorporationIdMedalsGetInner() { }
        /// <summary>
        /// Initializes a new instance of the <see cref="CorporationsCorporationIdMedalsGetInner" /> class.
        /// </summary>
        /// <param name="createdAt">createdAt (required).</param>
        /// <param name="creatorId">ID of the character who created this medal (required).</param>
        /// <param name="description">description (required).</param>
        /// <param name="medalId">medalId (required).</param>
        /// <param name="title">title (required).</param>
        public CorporationsCorporationIdMedalsGetInner(DateTime createdAt = default(DateTime), long creatorId = default(long), string description = default(string), long medalId = default(long), string title = default(string))
        {
            this.CreatedAt = createdAt;
            this.CreatorId = creatorId;
            // to ensure "description" is required (not null)
            if (description == null)
            {
                throw new ArgumentNullException("description is a required property for CorporationsCorporationIdMedalsGetInner and cannot be null");
            }
            this.Description = description;
            this.MedalId = medalId;
            // to ensure "title" is required (not null)
            if (title == null)
            {
                throw new ArgumentNullException("title is a required property for CorporationsCorporationIdMedalsGetInner and cannot be null");
            }
            this.Title = title;
        }

        /// <summary>
        /// Gets or Sets CreatedAt
        /// </summary>
        [DataMember(Name = "created_at", IsRequired = true, EmitDefaultValue = true)]
        public DateTime CreatedAt { get; set; }

        /// <summary>
        /// ID of the character who created this medal
        /// </summary>
        /// <value>ID of the character who created this medal</value>
        [DataMember(Name = "creator_id", IsRequired = true, EmitDefaultValue = true)]
        public long CreatorId { get; set; }

        /// <summary>
        /// Gets or Sets Description
        /// </summary>
        [DataMember(Name = "description", IsRequired = true, EmitDefaultValue = true)]
        public string Description { get; set; }

        /// <summary>
        /// Gets or Sets MedalId
        /// </summary>
        [DataMember(Name = "medal_id", IsRequired = true, EmitDefaultValue = true)]
        public long MedalId { get; set; }

        /// <summary>
        /// Gets or Sets Title
        /// </summary>
        [DataMember(Name = "title", IsRequired = true, EmitDefaultValue = true)]
        public string Title { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class CorporationsCorporationIdMedalsGetInner {\n");
            sb.Append("  CreatedAt: ").Append(CreatedAt).Append("\n");
            sb.Append("  CreatorId: ").Append(CreatorId).Append("\n");
            sb.Append("  Description: ").Append(Description).Append("\n");
            sb.Append("  MedalId: ").Append(MedalId).Append("\n");
            sb.Append("  Title: ").Append(Title).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

    }

}
