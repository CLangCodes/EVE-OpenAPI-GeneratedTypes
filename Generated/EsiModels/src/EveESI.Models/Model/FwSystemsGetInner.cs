/*
 * EVE Stable Infrastructure (ESI) - tranquility
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2025-08-26
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using OpenAPIDateConverter = EveESI.Models.Client.OpenAPIDateConverter;

namespace EveESI.Models.Model
{
    /// <summary>
    /// FwSystemsGetInner
    /// </summary>
    [DataContract(Name = "FwSystemsGet_inner")]
    public partial class FwSystemsGetInner
    {
        /// <summary>
        /// Defines Contested
        /// </summary>
        [JsonConverter(typeof(StringEnumConverter))]
        public enum ContestedEnum
        {
            /// <summary>
            /// Enum Captured for value: captured
            /// </summary>
            [EnumMember(Value = "captured")]
            Captured = 1,

            /// <summary>
            /// Enum Contested for value: contested
            /// </summary>
            [EnumMember(Value = "contested")]
            Contested = 2,

            /// <summary>
            /// Enum Uncontested for value: uncontested
            /// </summary>
            [EnumMember(Value = "uncontested")]
            Uncontested = 3,

            /// <summary>
            /// Enum Vulnerable for value: vulnerable
            /// </summary>
            [EnumMember(Value = "vulnerable")]
            Vulnerable = 4
        }


        /// <summary>
        /// Gets or Sets Contested
        /// </summary>
        [DataMember(Name = "contested", IsRequired = true, EmitDefaultValue = true)]
        public ContestedEnum Contested { get; set; }
        /// <summary>
        /// Initializes a new instance of the <see cref="FwSystemsGetInner" /> class.
        /// </summary>
        [JsonConstructorAttribute]
        protected FwSystemsGetInner() { }
        /// <summary>
        /// Initializes a new instance of the <see cref="FwSystemsGetInner" /> class.
        /// </summary>
        /// <param name="contested">contested (required).</param>
        /// <param name="occupierFactionId">occupierFactionId (required).</param>
        /// <param name="ownerFactionId">ownerFactionId (required).</param>
        /// <param name="solarSystemId">solarSystemId (required).</param>
        /// <param name="victoryPoints">victoryPoints (required).</param>
        /// <param name="victoryPointsThreshold">victoryPointsThreshold (required).</param>
        public FwSystemsGetInner(ContestedEnum contested = default(ContestedEnum), long occupierFactionId = default(long), long ownerFactionId = default(long), long solarSystemId = default(long), long victoryPoints = default(long), long victoryPointsThreshold = default(long))
        {
            this.Contested = contested;
            this.OccupierFactionId = occupierFactionId;
            this.OwnerFactionId = ownerFactionId;
            this.SolarSystemId = solarSystemId;
            this.VictoryPoints = victoryPoints;
            this.VictoryPointsThreshold = victoryPointsThreshold;
        }

        /// <summary>
        /// Gets or Sets OccupierFactionId
        /// </summary>
        [DataMember(Name = "occupier_faction_id", IsRequired = true, EmitDefaultValue = true)]
        public long OccupierFactionId { get; set; }

        /// <summary>
        /// Gets or Sets OwnerFactionId
        /// </summary>
        [DataMember(Name = "owner_faction_id", IsRequired = true, EmitDefaultValue = true)]
        public long OwnerFactionId { get; set; }

        /// <summary>
        /// Gets or Sets SolarSystemId
        /// </summary>
        [DataMember(Name = "solar_system_id", IsRequired = true, EmitDefaultValue = true)]
        public long SolarSystemId { get; set; }

        /// <summary>
        /// Gets or Sets VictoryPoints
        /// </summary>
        [DataMember(Name = "victory_points", IsRequired = true, EmitDefaultValue = true)]
        public long VictoryPoints { get; set; }

        /// <summary>
        /// Gets or Sets VictoryPointsThreshold
        /// </summary>
        [DataMember(Name = "victory_points_threshold", IsRequired = true, EmitDefaultValue = true)]
        public long VictoryPointsThreshold { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class FwSystemsGetInner {\n");
            sb.Append("  Contested: ").Append(Contested).Append("\n");
            sb.Append("  OccupierFactionId: ").Append(OccupierFactionId).Append("\n");
            sb.Append("  OwnerFactionId: ").Append(OwnerFactionId).Append("\n");
            sb.Append("  SolarSystemId: ").Append(SolarSystemId).Append("\n");
            sb.Append("  VictoryPoints: ").Append(VictoryPoints).Append("\n");
            sb.Append("  VictoryPointsThreshold: ").Append(VictoryPointsThreshold).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

    }

}
