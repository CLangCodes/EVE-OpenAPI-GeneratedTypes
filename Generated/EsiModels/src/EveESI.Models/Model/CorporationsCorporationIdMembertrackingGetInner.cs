/*
 * EVE Stable Infrastructure (ESI) - tranquility
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2025-08-26
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using OpenAPIDateConverter = EveESI.Models.Client.OpenAPIDateConverter;

namespace EveESI.Models.Model
{
    /// <summary>
    /// CorporationsCorporationIdMembertrackingGetInner
    /// </summary>
    [DataContract(Name = "CorporationsCorporationIdMembertrackingGet_inner")]
    public partial class CorporationsCorporationIdMembertrackingGetInner
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="CorporationsCorporationIdMembertrackingGetInner" /> class.
        /// </summary>
        [JsonConstructorAttribute]
        protected CorporationsCorporationIdMembertrackingGetInner() { }
        /// <summary>
        /// Initializes a new instance of the <see cref="CorporationsCorporationIdMembertrackingGetInner" /> class.
        /// </summary>
        /// <param name="baseId">baseId.</param>
        /// <param name="characterId">characterId (required).</param>
        /// <param name="locationId">locationId.</param>
        /// <param name="logoffDate">logoffDate.</param>
        /// <param name="logonDate">logonDate.</param>
        /// <param name="shipTypeId">shipTypeId.</param>
        /// <param name="startDate">startDate.</param>
        public CorporationsCorporationIdMembertrackingGetInner(long baseId = default(long), long characterId = default(long), long locationId = default(long), DateTime logoffDate = default(DateTime), DateTime logonDate = default(DateTime), long shipTypeId = default(long), DateTime startDate = default(DateTime))
        {
            this.CharacterId = characterId;
            this.BaseId = baseId;
            this.LocationId = locationId;
            this.LogoffDate = logoffDate;
            this.LogonDate = logonDate;
            this.ShipTypeId = shipTypeId;
            this.StartDate = startDate;
        }

        /// <summary>
        /// Gets or Sets BaseId
        /// </summary>
        [DataMember(Name = "base_id", EmitDefaultValue = false)]
        public long BaseId { get; set; }

        /// <summary>
        /// Gets or Sets CharacterId
        /// </summary>
        [DataMember(Name = "character_id", IsRequired = true, EmitDefaultValue = true)]
        public long CharacterId { get; set; }

        /// <summary>
        /// Gets or Sets LocationId
        /// </summary>
        [DataMember(Name = "location_id", EmitDefaultValue = false)]
        public long LocationId { get; set; }

        /// <summary>
        /// Gets or Sets LogoffDate
        /// </summary>
        [DataMember(Name = "logoff_date", EmitDefaultValue = false)]
        public DateTime LogoffDate { get; set; }

        /// <summary>
        /// Gets or Sets LogonDate
        /// </summary>
        [DataMember(Name = "logon_date", EmitDefaultValue = false)]
        public DateTime LogonDate { get; set; }

        /// <summary>
        /// Gets or Sets ShipTypeId
        /// </summary>
        [DataMember(Name = "ship_type_id", EmitDefaultValue = false)]
        public long ShipTypeId { get; set; }

        /// <summary>
        /// Gets or Sets StartDate
        /// </summary>
        [DataMember(Name = "start_date", EmitDefaultValue = false)]
        public DateTime StartDate { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class CorporationsCorporationIdMembertrackingGetInner {\n");
            sb.Append("  BaseId: ").Append(BaseId).Append("\n");
            sb.Append("  CharacterId: ").Append(CharacterId).Append("\n");
            sb.Append("  LocationId: ").Append(LocationId).Append("\n");
            sb.Append("  LogoffDate: ").Append(LogoffDate).Append("\n");
            sb.Append("  LogonDate: ").Append(LogonDate).Append("\n");
            sb.Append("  ShipTypeId: ").Append(ShipTypeId).Append("\n");
            sb.Append("  StartDate: ").Append(StartDate).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

    }

}
