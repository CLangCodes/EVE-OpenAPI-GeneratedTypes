/*
 * EVE Stable Infrastructure (ESI) - tranquility
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2025-08-26
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using OpenAPIDateConverter = EveESI.Models.Client.OpenAPIDateConverter;

namespace EveESI.Models.Model
{
    /// <summary>
    /// CharactersCharacterIdMailMailIdGet
    /// </summary>
    [DataContract(Name = "CharactersCharacterIdMailMailIdGet")]
    public partial class CharactersCharacterIdMailMailIdGet
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="CharactersCharacterIdMailMailIdGet" /> class.
        /// </summary>
        /// <param name="body">Mail&#39;s body.</param>
        /// <param name="from">From whom the mail was sent.</param>
        /// <param name="labels">Labels attached to the mail.</param>
        /// <param name="read">Whether the mail is flagged as read.</param>
        /// <param name="recipients">Recipients of the mail.</param>
        /// <param name="subject">Mail subject.</param>
        /// <param name="timestamp">When the mail was sent.</param>
        public CharactersCharacterIdMailMailIdGet(string body = default(string), long from = default(long), List<long> labels = default(List<long>), bool read = default(bool), List<PostCharactersCharacterIdMailRequestRecipientsInner> recipients = default(List<PostCharactersCharacterIdMailRequestRecipientsInner>), string subject = default(string), DateTime timestamp = default(DateTime))
        {
            this.Body = body;
            this.From = from;
            this.Labels = labels;
            this.Read = read;
            this.Recipients = recipients;
            this.Subject = subject;
            this.Timestamp = timestamp;
        }

        /// <summary>
        /// Mail&#39;s body
        /// </summary>
        /// <value>Mail&#39;s body</value>
        [DataMember(Name = "body", EmitDefaultValue = false)]
        public string Body { get; set; }

        /// <summary>
        /// From whom the mail was sent
        /// </summary>
        /// <value>From whom the mail was sent</value>
        [DataMember(Name = "from", EmitDefaultValue = false)]
        public long From { get; set; }

        /// <summary>
        /// Labels attached to the mail
        /// </summary>
        /// <value>Labels attached to the mail</value>
        [DataMember(Name = "labels", EmitDefaultValue = false)]
        public List<long> Labels { get; set; }

        /// <summary>
        /// Whether the mail is flagged as read
        /// </summary>
        /// <value>Whether the mail is flagged as read</value>
        [DataMember(Name = "read", EmitDefaultValue = true)]
        public bool Read { get; set; }

        /// <summary>
        /// Recipients of the mail
        /// </summary>
        /// <value>Recipients of the mail</value>
        [DataMember(Name = "recipients", EmitDefaultValue = false)]
        public List<PostCharactersCharacterIdMailRequestRecipientsInner> Recipients { get; set; }

        /// <summary>
        /// Mail subject
        /// </summary>
        /// <value>Mail subject</value>
        [DataMember(Name = "subject", EmitDefaultValue = false)]
        public string Subject { get; set; }

        /// <summary>
        /// When the mail was sent
        /// </summary>
        /// <value>When the mail was sent</value>
        [DataMember(Name = "timestamp", EmitDefaultValue = false)]
        public DateTime Timestamp { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class CharactersCharacterIdMailMailIdGet {\n");
            sb.Append("  Body: ").Append(Body).Append("\n");
            sb.Append("  From: ").Append(From).Append("\n");
            sb.Append("  Labels: ").Append(Labels).Append("\n");
            sb.Append("  Read: ").Append(Read).Append("\n");
            sb.Append("  Recipients: ").Append(Recipients).Append("\n");
            sb.Append("  Subject: ").Append(Subject).Append("\n");
            sb.Append("  Timestamp: ").Append(Timestamp).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

    }

}
