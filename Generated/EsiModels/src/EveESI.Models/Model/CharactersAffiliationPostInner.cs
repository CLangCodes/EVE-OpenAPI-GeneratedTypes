/*
 * EVE Stable Infrastructure (ESI) - tranquility
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2025-08-26
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using OpenAPIDateConverter = EveESI.Models.Client.OpenAPIDateConverter;

namespace EveESI.Models.Model
{
    /// <summary>
    /// CharactersAffiliationPostInner
    /// </summary>
    [DataContract(Name = "CharactersAffiliationPost_inner")]
    public partial class CharactersAffiliationPostInner
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="CharactersAffiliationPostInner" /> class.
        /// </summary>
        [JsonConstructorAttribute]
        protected CharactersAffiliationPostInner() { }
        /// <summary>
        /// Initializes a new instance of the <see cref="CharactersAffiliationPostInner" /> class.
        /// </summary>
        /// <param name="allianceId">The character&#39;s alliance ID, if their corporation is in an alliance.</param>
        /// <param name="characterId">The character&#39;s ID (required).</param>
        /// <param name="corporationId">The character&#39;s corporation ID (required).</param>
        /// <param name="factionId">The character&#39;s faction ID, if their corporation is in a faction.</param>
        public CharactersAffiliationPostInner(long allianceId = default(long), long characterId = default(long), long corporationId = default(long), long factionId = default(long))
        {
            this.CharacterId = characterId;
            this.CorporationId = corporationId;
            this.AllianceId = allianceId;
            this.FactionId = factionId;
        }

        /// <summary>
        /// The character&#39;s alliance ID, if their corporation is in an alliance
        /// </summary>
        /// <value>The character&#39;s alliance ID, if their corporation is in an alliance</value>
        [DataMember(Name = "alliance_id", EmitDefaultValue = false)]
        public long AllianceId { get; set; }

        /// <summary>
        /// The character&#39;s ID
        /// </summary>
        /// <value>The character&#39;s ID</value>
        [DataMember(Name = "character_id", IsRequired = true, EmitDefaultValue = true)]
        public long CharacterId { get; set; }

        /// <summary>
        /// The character&#39;s corporation ID
        /// </summary>
        /// <value>The character&#39;s corporation ID</value>
        [DataMember(Name = "corporation_id", IsRequired = true, EmitDefaultValue = true)]
        public long CorporationId { get; set; }

        /// <summary>
        /// The character&#39;s faction ID, if their corporation is in a faction
        /// </summary>
        /// <value>The character&#39;s faction ID, if their corporation is in a faction</value>
        [DataMember(Name = "faction_id", EmitDefaultValue = false)]
        public long FactionId { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class CharactersAffiliationPostInner {\n");
            sb.Append("  AllianceId: ").Append(AllianceId).Append("\n");
            sb.Append("  CharacterId: ").Append(CharacterId).Append("\n");
            sb.Append("  CorporationId: ").Append(CorporationId).Append("\n");
            sb.Append("  FactionId: ").Append(FactionId).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

    }

}
