/*
 * EVE Stable Infrastructure (ESI) - tranquility
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2025-08-26
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using OpenAPIDateConverter = EveESI.Models.Client.OpenAPIDateConverter;

namespace EveESI.Models.Model
{
    /// <summary>
    /// CharactersCharacterIdFleetGet
    /// </summary>
    [DataContract(Name = "CharactersCharacterIdFleetGet")]
    public partial class CharactersCharacterIdFleetGet
    {
        /// <summary>
        /// Member’s role in fleet
        /// </summary>
        /// <value>Member’s role in fleet</value>
        [JsonConverter(typeof(StringEnumConverter))]
        public enum RoleEnum
        {
            /// <summary>
            /// Enum FleetCommander for value: fleet_commander
            /// </summary>
            [EnumMember(Value = "fleet_commander")]
            FleetCommander = 1,

            /// <summary>
            /// Enum SquadCommander for value: squad_commander
            /// </summary>
            [EnumMember(Value = "squad_commander")]
            SquadCommander = 2,

            /// <summary>
            /// Enum SquadMember for value: squad_member
            /// </summary>
            [EnumMember(Value = "squad_member")]
            SquadMember = 3,

            /// <summary>
            /// Enum WingCommander for value: wing_commander
            /// </summary>
            [EnumMember(Value = "wing_commander")]
            WingCommander = 4
        }


        /// <summary>
        /// Member’s role in fleet
        /// </summary>
        /// <value>Member’s role in fleet</value>
        [DataMember(Name = "role", IsRequired = true, EmitDefaultValue = true)]
        public RoleEnum Role { get; set; }
        /// <summary>
        /// Initializes a new instance of the <see cref="CharactersCharacterIdFleetGet" /> class.
        /// </summary>
        [JsonConstructorAttribute]
        protected CharactersCharacterIdFleetGet() { }
        /// <summary>
        /// Initializes a new instance of the <see cref="CharactersCharacterIdFleetGet" /> class.
        /// </summary>
        /// <param name="fleetBossId">Character ID of the current fleet boss (required).</param>
        /// <param name="fleetId">The character&#39;s current fleet ID (required).</param>
        /// <param name="role">Member’s role in fleet (required).</param>
        /// <param name="squadId">ID of the squad the member is in. If not applicable, will be set to -1 (required).</param>
        /// <param name="wingId">ID of the wing the member is in. If not applicable, will be set to -1 (required).</param>
        public CharactersCharacterIdFleetGet(long fleetBossId = default(long), long fleetId = default(long), RoleEnum role = default(RoleEnum), long squadId = default(long), long wingId = default(long))
        {
            this.FleetBossId = fleetBossId;
            this.FleetId = fleetId;
            this.Role = role;
            this.SquadId = squadId;
            this.WingId = wingId;
        }

        /// <summary>
        /// Character ID of the current fleet boss
        /// </summary>
        /// <value>Character ID of the current fleet boss</value>
        [DataMember(Name = "fleet_boss_id", IsRequired = true, EmitDefaultValue = true)]
        public long FleetBossId { get; set; }

        /// <summary>
        /// The character&#39;s current fleet ID
        /// </summary>
        /// <value>The character&#39;s current fleet ID</value>
        [DataMember(Name = "fleet_id", IsRequired = true, EmitDefaultValue = true)]
        public long FleetId { get; set; }

        /// <summary>
        /// ID of the squad the member is in. If not applicable, will be set to -1
        /// </summary>
        /// <value>ID of the squad the member is in. If not applicable, will be set to -1</value>
        [DataMember(Name = "squad_id", IsRequired = true, EmitDefaultValue = true)]
        public long SquadId { get; set; }

        /// <summary>
        /// ID of the wing the member is in. If not applicable, will be set to -1
        /// </summary>
        /// <value>ID of the wing the member is in. If not applicable, will be set to -1</value>
        [DataMember(Name = "wing_id", IsRequired = true, EmitDefaultValue = true)]
        public long WingId { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class CharactersCharacterIdFleetGet {\n");
            sb.Append("  FleetBossId: ").Append(FleetBossId).Append("\n");
            sb.Append("  FleetId: ").Append(FleetId).Append("\n");
            sb.Append("  Role: ").Append(Role).Append("\n");
            sb.Append("  SquadId: ").Append(SquadId).Append("\n");
            sb.Append("  WingId: ").Append(WingId).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

    }

}
