/*
 * EVE Stable Infrastructure (ESI) - tranquility
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2025-08-26
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using OpenAPIDateConverter = EveESI.Models.Client.OpenAPIDateConverter;

namespace EveESI.Models.Model
{
    /// <summary>
    /// PostCharactersCharacterIdFittingsRequest
    /// </summary>
    [DataContract(Name = "PostCharactersCharacterIdFittings_request")]
    public partial class PostCharactersCharacterIdFittingsRequest
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="PostCharactersCharacterIdFittingsRequest" /> class.
        /// </summary>
        [JsonConstructorAttribute]
        protected PostCharactersCharacterIdFittingsRequest() { }
        /// <summary>
        /// Initializes a new instance of the <see cref="PostCharactersCharacterIdFittingsRequest" /> class.
        /// </summary>
        /// <param name="description">description (required).</param>
        /// <param name="items">items (required).</param>
        /// <param name="name">name (required).</param>
        /// <param name="shipTypeId">shipTypeId (required).</param>
        public PostCharactersCharacterIdFittingsRequest(string description = default(string), List<PostCharactersCharacterIdFittingsRequestItemsInner> items = default(List<PostCharactersCharacterIdFittingsRequestItemsInner>), string name = default(string), long shipTypeId = default(long))
        {
            // to ensure "description" is required (not null)
            if (description == null)
            {
                throw new ArgumentNullException("description is a required property for PostCharactersCharacterIdFittingsRequest and cannot be null");
            }
            this.Description = description;
            // to ensure "items" is required (not null)
            if (items == null)
            {
                throw new ArgumentNullException("items is a required property for PostCharactersCharacterIdFittingsRequest and cannot be null");
            }
            this.Items = items;
            // to ensure "name" is required (not null)
            if (name == null)
            {
                throw new ArgumentNullException("name is a required property for PostCharactersCharacterIdFittingsRequest and cannot be null");
            }
            this.Name = name;
            this.ShipTypeId = shipTypeId;
        }

        /// <summary>
        /// Gets or Sets Description
        /// </summary>
        [DataMember(Name = "description", IsRequired = true, EmitDefaultValue = true)]
        public string Description { get; set; }

        /// <summary>
        /// Gets or Sets Items
        /// </summary>
        [DataMember(Name = "items", IsRequired = true, EmitDefaultValue = true)]
        public List<PostCharactersCharacterIdFittingsRequestItemsInner> Items { get; set; }

        /// <summary>
        /// Gets or Sets Name
        /// </summary>
        [DataMember(Name = "name", IsRequired = true, EmitDefaultValue = true)]
        public string Name { get; set; }

        /// <summary>
        /// Gets or Sets ShipTypeId
        /// </summary>
        [DataMember(Name = "ship_type_id", IsRequired = true, EmitDefaultValue = true)]
        public long ShipTypeId { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class PostCharactersCharacterIdFittingsRequest {\n");
            sb.Append("  Description: ").Append(Description).Append("\n");
            sb.Append("  Items: ").Append(Items).Append("\n");
            sb.Append("  Name: ").Append(Name).Append("\n");
            sb.Append("  ShipTypeId: ").Append(ShipTypeId).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

    }

}
