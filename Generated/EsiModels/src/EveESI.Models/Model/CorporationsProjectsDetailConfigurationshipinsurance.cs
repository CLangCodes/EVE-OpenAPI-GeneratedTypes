/*
 * EVE Stable Infrastructure (ESI) - tranquility
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2025-08-26
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using OpenAPIDateConverter = EveESI.Models.Client.OpenAPIDateConverter;

namespace EveESI.Models.Model
{
    /// <summary>
    /// CorporationsProjectsDetailConfigurationshipinsurance
    /// </summary>
    [DataContract(Name = "CorporationsProjectsDetailConfigurationshipinsurance")]
    public partial class CorporationsProjectsDetailConfigurationshipinsurance
    {
        /// <summary>
        /// Conflict type
        /// </summary>
        /// <value>Conflict type</value>
        [JsonConverter(typeof(StringEnumConverter))]
        public enum ConflictTypeEnum
        {
            /// <summary>
            /// Enum Any for value: Any
            /// </summary>
            [EnumMember(Value = "Any")]
            Any = 1,

            /// <summary>
            /// Enum Pvp for value: Pvp
            /// </summary>
            [EnumMember(Value = "Pvp")]
            Pvp = 2,

            /// <summary>
            /// Enum Pve for value: Pve
            /// </summary>
            [EnumMember(Value = "Pve")]
            Pve = 3
        }


        /// <summary>
        /// Conflict type
        /// </summary>
        /// <value>Conflict type</value>
        [DataMember(Name = "conflict_type", IsRequired = true, EmitDefaultValue = true)]
        public ConflictTypeEnum ConflictType { get; set; }
        /// <summary>
        /// Initializes a new instance of the <see cref="CorporationsProjectsDetailConfigurationshipinsurance" /> class.
        /// </summary>
        [JsonConstructorAttribute]
        protected CorporationsProjectsDetailConfigurationshipinsurance() { }
        /// <summary>
        /// Initializes a new instance of the <see cref="CorporationsProjectsDetailConfigurationshipinsurance" /> class.
        /// </summary>
        /// <param name="conflictType">Conflict type (required).</param>
        /// <param name="identities">Identity of killer.</param>
        /// <param name="locations">Location of lost ship.</param>
        /// <param name="reimburseImplants">Reimburse implants (required).</param>
        /// <param name="ships">Ship-type of lost ship.</param>
        public CorporationsProjectsDetailConfigurationshipinsurance(ConflictTypeEnum conflictType = default(ConflictTypeEnum), List<CorporationsProjectsDetailConfigurationdamageshipIdentitiesInner> identities = default(List<CorporationsProjectsDetailConfigurationdamageshipIdentitiesInner>), List<CorporationsProjectsDetailConfigurationcapturefwcomplexLocationsInner> locations = default(List<CorporationsProjectsDetailConfigurationcapturefwcomplexLocationsInner>), bool reimburseImplants = default(bool), List<CorporationsProjectsDetailConfigurationdamageshipShipsInner> ships = default(List<CorporationsProjectsDetailConfigurationdamageshipShipsInner>))
        {
            this.ConflictType = conflictType;
            this.ReimburseImplants = reimburseImplants;
            this.Identities = identities;
            this.Locations = locations;
            this.Ships = ships;
        }

        /// <summary>
        /// Identity of killer
        /// </summary>
        /// <value>Identity of killer</value>
        [DataMember(Name = "identities", EmitDefaultValue = false)]
        public List<CorporationsProjectsDetailConfigurationdamageshipIdentitiesInner> Identities { get; set; }

        /// <summary>
        /// Location of lost ship
        /// </summary>
        /// <value>Location of lost ship</value>
        [DataMember(Name = "locations", EmitDefaultValue = false)]
        public List<CorporationsProjectsDetailConfigurationcapturefwcomplexLocationsInner> Locations { get; set; }

        /// <summary>
        /// Reimburse implants
        /// </summary>
        /// <value>Reimburse implants</value>
        [DataMember(Name = "reimburse_implants", IsRequired = true, EmitDefaultValue = true)]
        public bool ReimburseImplants { get; set; }

        /// <summary>
        /// Ship-type of lost ship
        /// </summary>
        /// <value>Ship-type of lost ship</value>
        [DataMember(Name = "ships", EmitDefaultValue = false)]
        public List<CorporationsProjectsDetailConfigurationdamageshipShipsInner> Ships { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class CorporationsProjectsDetailConfigurationshipinsurance {\n");
            sb.Append("  ConflictType: ").Append(ConflictType).Append("\n");
            sb.Append("  Identities: ").Append(Identities).Append("\n");
            sb.Append("  Locations: ").Append(Locations).Append("\n");
            sb.Append("  ReimburseImplants: ").Append(ReimburseImplants).Append("\n");
            sb.Append("  Ships: ").Append(Ships).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

    }

}
