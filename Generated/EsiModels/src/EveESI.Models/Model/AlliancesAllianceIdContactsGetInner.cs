/*
 * EVE Stable Infrastructure (ESI) - tranquility
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2025-08-26
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using OpenAPIDateConverter = EveESI.Models.Client.OpenAPIDateConverter;

namespace EveESI.Models.Model
{
    /// <summary>
    /// AlliancesAllianceIdContactsGetInner
    /// </summary>
    [DataContract(Name = "AlliancesAllianceIdContactsGet_inner")]
    public partial class AlliancesAllianceIdContactsGetInner
    {
        /// <summary>
        /// Defines ContactType
        /// </summary>
        [JsonConverter(typeof(StringEnumConverter))]
        public enum ContactTypeEnum
        {
            /// <summary>
            /// Enum Character for value: character
            /// </summary>
            [EnumMember(Value = "character")]
            Character = 1,

            /// <summary>
            /// Enum Corporation for value: corporation
            /// </summary>
            [EnumMember(Value = "corporation")]
            Corporation = 2,

            /// <summary>
            /// Enum Alliance for value: alliance
            /// </summary>
            [EnumMember(Value = "alliance")]
            Alliance = 3,

            /// <summary>
            /// Enum Faction for value: faction
            /// </summary>
            [EnumMember(Value = "faction")]
            Faction = 4
        }


        /// <summary>
        /// Gets or Sets ContactType
        /// </summary>
        [DataMember(Name = "contact_type", IsRequired = true, EmitDefaultValue = true)]
        public ContactTypeEnum ContactType { get; set; }
        /// <summary>
        /// Initializes a new instance of the <see cref="AlliancesAllianceIdContactsGetInner" /> class.
        /// </summary>
        [JsonConstructorAttribute]
        protected AlliancesAllianceIdContactsGetInner() { }
        /// <summary>
        /// Initializes a new instance of the <see cref="AlliancesAllianceIdContactsGetInner" /> class.
        /// </summary>
        /// <param name="contactId">contactId (required).</param>
        /// <param name="contactType">contactType (required).</param>
        /// <param name="labelIds">labelIds.</param>
        /// <param name="standing">Standing of the contact (required).</param>
        public AlliancesAllianceIdContactsGetInner(long contactId = default(long), ContactTypeEnum contactType = default(ContactTypeEnum), List<long> labelIds = default(List<long>), double standing = default(double))
        {
            this.ContactId = contactId;
            this.ContactType = contactType;
            this.Standing = standing;
            this.LabelIds = labelIds;
        }

        /// <summary>
        /// Gets or Sets ContactId
        /// </summary>
        [DataMember(Name = "contact_id", IsRequired = true, EmitDefaultValue = true)]
        public long ContactId { get; set; }

        /// <summary>
        /// Gets or Sets LabelIds
        /// </summary>
        [DataMember(Name = "label_ids", EmitDefaultValue = false)]
        public List<long> LabelIds { get; set; }

        /// <summary>
        /// Standing of the contact
        /// </summary>
        /// <value>Standing of the contact</value>
        [DataMember(Name = "standing", IsRequired = true, EmitDefaultValue = true)]
        public double Standing { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class AlliancesAllianceIdContactsGetInner {\n");
            sb.Append("  ContactId: ").Append(ContactId).Append("\n");
            sb.Append("  ContactType: ").Append(ContactType).Append("\n");
            sb.Append("  LabelIds: ").Append(LabelIds).Append("\n");
            sb.Append("  Standing: ").Append(Standing).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

    }

}
