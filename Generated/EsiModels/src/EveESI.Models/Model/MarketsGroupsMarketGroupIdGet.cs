/*
 * EVE Stable Infrastructure (ESI) - tranquility
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2025-08-26
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using OpenAPIDateConverter = EveESI.Models.Client.OpenAPIDateConverter;

namespace EveESI.Models.Model
{
    /// <summary>
    /// MarketsGroupsMarketGroupIdGet
    /// </summary>
    [DataContract(Name = "MarketsGroupsMarketGroupIdGet")]
    public partial class MarketsGroupsMarketGroupIdGet
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="MarketsGroupsMarketGroupIdGet" /> class.
        /// </summary>
        [JsonConstructorAttribute]
        protected MarketsGroupsMarketGroupIdGet() { }
        /// <summary>
        /// Initializes a new instance of the <see cref="MarketsGroupsMarketGroupIdGet" /> class.
        /// </summary>
        /// <param name="description">description (required).</param>
        /// <param name="marketGroupId">marketGroupId (required).</param>
        /// <param name="name">name (required).</param>
        /// <param name="parentGroupId">parentGroupId.</param>
        /// <param name="types">types (required).</param>
        public MarketsGroupsMarketGroupIdGet(string description = default(string), long marketGroupId = default(long), string name = default(string), long parentGroupId = default(long), List<long> types = default(List<long>))
        {
            // to ensure "description" is required (not null)
            if (description == null)
            {
                throw new ArgumentNullException("description is a required property for MarketsGroupsMarketGroupIdGet and cannot be null");
            }
            this.Description = description;
            this.MarketGroupId = marketGroupId;
            // to ensure "name" is required (not null)
            if (name == null)
            {
                throw new ArgumentNullException("name is a required property for MarketsGroupsMarketGroupIdGet and cannot be null");
            }
            this.Name = name;
            // to ensure "types" is required (not null)
            if (types == null)
            {
                throw new ArgumentNullException("types is a required property for MarketsGroupsMarketGroupIdGet and cannot be null");
            }
            this.Types = types;
            this.ParentGroupId = parentGroupId;
        }

        /// <summary>
        /// Gets or Sets Description
        /// </summary>
        [DataMember(Name = "description", IsRequired = true, EmitDefaultValue = true)]
        public string Description { get; set; }

        /// <summary>
        /// Gets or Sets MarketGroupId
        /// </summary>
        [DataMember(Name = "market_group_id", IsRequired = true, EmitDefaultValue = true)]
        public long MarketGroupId { get; set; }

        /// <summary>
        /// Gets or Sets Name
        /// </summary>
        [DataMember(Name = "name", IsRequired = true, EmitDefaultValue = true)]
        public string Name { get; set; }

        /// <summary>
        /// Gets or Sets ParentGroupId
        /// </summary>
        [DataMember(Name = "parent_group_id", EmitDefaultValue = false)]
        public long ParentGroupId { get; set; }

        /// <summary>
        /// Gets or Sets Types
        /// </summary>
        [DataMember(Name = "types", IsRequired = true, EmitDefaultValue = true)]
        public List<long> Types { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class MarketsGroupsMarketGroupIdGet {\n");
            sb.Append("  Description: ").Append(Description).Append("\n");
            sb.Append("  MarketGroupId: ").Append(MarketGroupId).Append("\n");
            sb.Append("  Name: ").Append(Name).Append("\n");
            sb.Append("  ParentGroupId: ").Append(ParentGroupId).Append("\n");
            sb.Append("  Types: ").Append(Types).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

    }

}
