/*
 * EVE Stable Infrastructure (ESI) - tranquility
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2025-08-26
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using OpenAPIDateConverter = EveESI.Models.Client.OpenAPIDateConverter;

namespace EveESI.Models.Model
{
    /// <summary>
    /// CorporationCorporationIdMiningObserversGetInner
    /// </summary>
    [DataContract(Name = "CorporationCorporationIdMiningObserversGet_inner")]
    public partial class CorporationCorporationIdMiningObserversGetInner
    {
        /// <summary>
        /// The category of the observing entity
        /// </summary>
        /// <value>The category of the observing entity</value>
        [JsonConverter(typeof(StringEnumConverter))]
        public enum ObserverTypeEnum
        {
            /// <summary>
            /// Enum Structure for value: structure
            /// </summary>
            [EnumMember(Value = "structure")]
            Structure = 1
        }


        /// <summary>
        /// The category of the observing entity
        /// </summary>
        /// <value>The category of the observing entity</value>
        [DataMember(Name = "observer_type", IsRequired = true, EmitDefaultValue = true)]
        public ObserverTypeEnum ObserverType { get; set; }
        /// <summary>
        /// Initializes a new instance of the <see cref="CorporationCorporationIdMiningObserversGetInner" /> class.
        /// </summary>
        [JsonConstructorAttribute]
        protected CorporationCorporationIdMiningObserversGetInner() { }
        /// <summary>
        /// Initializes a new instance of the <see cref="CorporationCorporationIdMiningObserversGetInner" /> class.
        /// </summary>
        /// <param name="lastUpdated">lastUpdated (required).</param>
        /// <param name="observerId">The entity that was observing the asteroid field when it was mined.  (required).</param>
        /// <param name="observerType">The category of the observing entity (required).</param>
        public CorporationCorporationIdMiningObserversGetInner(DateOnly lastUpdated = default(DateOnly), long observerId = default(long), ObserverTypeEnum observerType = default(ObserverTypeEnum))
        {
            // to ensure "lastUpdated" is required (not null)
            if (lastUpdated == null)
            {
                throw new ArgumentNullException("lastUpdated is a required property for CorporationCorporationIdMiningObserversGetInner and cannot be null");
            }
            this.LastUpdated = lastUpdated;
            this.ObserverId = observerId;
            this.ObserverType = observerType;
        }

        /// <summary>
        /// Gets or Sets LastUpdated
        /// </summary>
        [DataMember(Name = "last_updated", IsRequired = true, EmitDefaultValue = true)]
        [JsonConverter(typeof(OpenAPIDateConverter))]
        public DateOnly LastUpdated { get; set; }

        /// <summary>
        /// The entity that was observing the asteroid field when it was mined. 
        /// </summary>
        /// <value>The entity that was observing the asteroid field when it was mined. </value>
        [DataMember(Name = "observer_id", IsRequired = true, EmitDefaultValue = true)]
        public long ObserverId { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class CorporationCorporationIdMiningObserversGetInner {\n");
            sb.Append("  LastUpdated: ").Append(LastUpdated).Append("\n");
            sb.Append("  ObserverId: ").Append(ObserverId).Append("\n");
            sb.Append("  ObserverType: ").Append(ObserverType).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

    }

}
