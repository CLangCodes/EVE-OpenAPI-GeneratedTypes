/*
 * EVE Stable Infrastructure (ESI) - tranquility
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2025-08-26
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using OpenAPIDateConverter = EveESI.Models.Client.OpenAPIDateConverter;

namespace EveESI.Models.Model
{
    /// <summary>
    /// CorporationsProjectsDetailContribution
    /// </summary>
    [DataContract(Name = "CorporationsProjectsDetailContribution")]
    public partial class CorporationsProjectsDetailContribution
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="CorporationsProjectsDetailContribution" /> class.
        /// </summary>
        /// <param name="participationLimit">Limit on the contribution of the individual participant.</param>
        /// <param name="rewardPerContribution">ISK reward per contribution.</param>
        /// <param name="submissionLimit">Limit on amount of contribution per submission.</param>
        /// <param name="submissionMultiplier">Multiplier towards progress per contribution.</param>
        public CorporationsProjectsDetailContribution(long participationLimit = default(long), double rewardPerContribution = default(double), long submissionLimit = default(long), double submissionMultiplier = default(double))
        {
            this.ParticipationLimit = participationLimit;
            this.RewardPerContribution = rewardPerContribution;
            this.SubmissionLimit = submissionLimit;
            this.SubmissionMultiplier = submissionMultiplier;
        }

        /// <summary>
        /// Limit on the contribution of the individual participant
        /// </summary>
        /// <value>Limit on the contribution of the individual participant</value>
        [DataMember(Name = "participation_limit", EmitDefaultValue = false)]
        public long ParticipationLimit { get; set; }

        /// <summary>
        /// ISK reward per contribution
        /// </summary>
        /// <value>ISK reward per contribution</value>
        [DataMember(Name = "reward_per_contribution", EmitDefaultValue = false)]
        public double RewardPerContribution { get; set; }

        /// <summary>
        /// Limit on amount of contribution per submission
        /// </summary>
        /// <value>Limit on amount of contribution per submission</value>
        [DataMember(Name = "submission_limit", EmitDefaultValue = false)]
        public long SubmissionLimit { get; set; }

        /// <summary>
        /// Multiplier towards progress per contribution
        /// </summary>
        /// <value>Multiplier towards progress per contribution</value>
        [DataMember(Name = "submission_multiplier", EmitDefaultValue = false)]
        public double SubmissionMultiplier { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class CorporationsProjectsDetailContribution {\n");
            sb.Append("  ParticipationLimit: ").Append(ParticipationLimit).Append("\n");
            sb.Append("  RewardPerContribution: ").Append(RewardPerContribution).Append("\n");
            sb.Append("  SubmissionLimit: ").Append(SubmissionLimit).Append("\n");
            sb.Append("  SubmissionMultiplier: ").Append(SubmissionMultiplier).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

    }

}
