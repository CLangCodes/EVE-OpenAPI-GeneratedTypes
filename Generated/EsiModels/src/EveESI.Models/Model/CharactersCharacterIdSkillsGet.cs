/*
 * EVE Stable Infrastructure (ESI) - tranquility
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2025-08-26
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using OpenAPIDateConverter = EveESI.Models.Client.OpenAPIDateConverter;

namespace EveESI.Models.Model
{
    /// <summary>
    /// CharactersCharacterIdSkillsGet
    /// </summary>
    [DataContract(Name = "CharactersCharacterIdSkillsGet")]
    public partial class CharactersCharacterIdSkillsGet
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="CharactersCharacterIdSkillsGet" /> class.
        /// </summary>
        [JsonConstructorAttribute]
        protected CharactersCharacterIdSkillsGet() { }
        /// <summary>
        /// Initializes a new instance of the <see cref="CharactersCharacterIdSkillsGet" /> class.
        /// </summary>
        /// <param name="skills">skills (required).</param>
        /// <param name="totalSp">totalSp (required).</param>
        /// <param name="unallocatedSp">Skill points available to be assigned.</param>
        public CharactersCharacterIdSkillsGet(List<CharactersCharacterIdSkillsGetSkillsInner> skills = default(List<CharactersCharacterIdSkillsGetSkillsInner>), long totalSp = default(long), long unallocatedSp = default(long))
        {
            // to ensure "skills" is required (not null)
            if (skills == null)
            {
                throw new ArgumentNullException("skills is a required property for CharactersCharacterIdSkillsGet and cannot be null");
            }
            this.Skills = skills;
            this.TotalSp = totalSp;
            this.UnallocatedSp = unallocatedSp;
        }

        /// <summary>
        /// Gets or Sets Skills
        /// </summary>
        [DataMember(Name = "skills", IsRequired = true, EmitDefaultValue = true)]
        public List<CharactersCharacterIdSkillsGetSkillsInner> Skills { get; set; }

        /// <summary>
        /// Gets or Sets TotalSp
        /// </summary>
        [DataMember(Name = "total_sp", IsRequired = true, EmitDefaultValue = true)]
        public long TotalSp { get; set; }

        /// <summary>
        /// Skill points available to be assigned
        /// </summary>
        /// <value>Skill points available to be assigned</value>
        [DataMember(Name = "unallocated_sp", EmitDefaultValue = false)]
        public long UnallocatedSp { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class CharactersCharacterIdSkillsGet {\n");
            sb.Append("  Skills: ").Append(Skills).Append("\n");
            sb.Append("  TotalSp: ").Append(TotalSp).Append("\n");
            sb.Append("  UnallocatedSp: ").Append(UnallocatedSp).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

    }

}
