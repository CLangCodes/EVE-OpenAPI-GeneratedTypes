/*
 * EVE Stable Infrastructure (ESI) - tranquility
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2025-08-26
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using Xunit;

using EveESI.Models.Client;
using EveESI.Models.Api;
// uncomment below to import models
//using EveESI.Models.Model;

namespace EveESI.Models.Test.Api
{
    /// <summary>
    ///  Class for testing IndustryApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    public class IndustryApiTests : IDisposable
    {
        private IndustryApi instance;

        public IndustryApiTests()
        {
            instance = new IndustryApi();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of IndustryApi
        /// </summary>
        [Fact]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsType' IndustryApi
            //Assert.IsType<IndustryApi>(instance);
        }

        /// <summary>
        /// Test GetCharactersCharacterIdIndustryJobs
        /// </summary>
        [Fact]
        public void GetCharactersCharacterIdIndustryJobsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //long characterId = null;
            //DateOnly xCompatibilityDate = null;
            //bool? includeCompleted = null;
            //string? acceptLanguage = null;
            //string? ifNoneMatch = null;
            //string? xTenant = null;
            //var response = instance.GetCharactersCharacterIdIndustryJobs(characterId, xCompatibilityDate, includeCompleted, acceptLanguage, ifNoneMatch, xTenant);
            //Assert.IsType<List<CharactersCharacterIdIndustryJobsGetInner>>(response);
        }

        /// <summary>
        /// Test GetCharactersCharacterIdMining
        /// </summary>
        [Fact]
        public void GetCharactersCharacterIdMiningTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //long characterId = null;
            //DateOnly xCompatibilityDate = null;
            //int? page = null;
            //string? acceptLanguage = null;
            //string? ifNoneMatch = null;
            //string? xTenant = null;
            //var response = instance.GetCharactersCharacterIdMining(characterId, xCompatibilityDate, page, acceptLanguage, ifNoneMatch, xTenant);
            //Assert.IsType<List<CharactersCharacterIdMiningGetInner>>(response);
        }

        /// <summary>
        /// Test GetCorporationCorporationIdMiningExtractions
        /// </summary>
        [Fact]
        public void GetCorporationCorporationIdMiningExtractionsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //long corporationId = null;
            //DateOnly xCompatibilityDate = null;
            //int? page = null;
            //string? acceptLanguage = null;
            //string? ifNoneMatch = null;
            //string? xTenant = null;
            //var response = instance.GetCorporationCorporationIdMiningExtractions(corporationId, xCompatibilityDate, page, acceptLanguage, ifNoneMatch, xTenant);
            //Assert.IsType<List<CorporationCorporationIdMiningExtractionsGetInner>>(response);
        }

        /// <summary>
        /// Test GetCorporationCorporationIdMiningObservers
        /// </summary>
        [Fact]
        public void GetCorporationCorporationIdMiningObserversTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //long corporationId = null;
            //DateOnly xCompatibilityDate = null;
            //int? page = null;
            //string? acceptLanguage = null;
            //string? ifNoneMatch = null;
            //string? xTenant = null;
            //var response = instance.GetCorporationCorporationIdMiningObservers(corporationId, xCompatibilityDate, page, acceptLanguage, ifNoneMatch, xTenant);
            //Assert.IsType<List<CorporationCorporationIdMiningObserversGetInner>>(response);
        }

        /// <summary>
        /// Test GetCorporationCorporationIdMiningObserversObserverId
        /// </summary>
        [Fact]
        public void GetCorporationCorporationIdMiningObserversObserverIdTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //long corporationId = null;
            //long observerId = null;
            //DateOnly xCompatibilityDate = null;
            //int? page = null;
            //string? acceptLanguage = null;
            //string? ifNoneMatch = null;
            //string? xTenant = null;
            //var response = instance.GetCorporationCorporationIdMiningObserversObserverId(corporationId, observerId, xCompatibilityDate, page, acceptLanguage, ifNoneMatch, xTenant);
            //Assert.IsType<List<CorporationCorporationIdMiningObserversObserverIdGetInner>>(response);
        }

        /// <summary>
        /// Test GetCorporationsCorporationIdIndustryJobs
        /// </summary>
        [Fact]
        public void GetCorporationsCorporationIdIndustryJobsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //long corporationId = null;
            //DateOnly xCompatibilityDate = null;
            //bool? includeCompleted = null;
            //int? page = null;
            //string? acceptLanguage = null;
            //string? ifNoneMatch = null;
            //string? xTenant = null;
            //var response = instance.GetCorporationsCorporationIdIndustryJobs(corporationId, xCompatibilityDate, includeCompleted, page, acceptLanguage, ifNoneMatch, xTenant);
            //Assert.IsType<List<CorporationsCorporationIdIndustryJobsGetInner>>(response);
        }

        /// <summary>
        /// Test GetIndustryFacilities
        /// </summary>
        [Fact]
        public void GetIndustryFacilitiesTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //DateOnly xCompatibilityDate = null;
            //string? acceptLanguage = null;
            //string? ifNoneMatch = null;
            //string? xTenant = null;
            //var response = instance.GetIndustryFacilities(xCompatibilityDate, acceptLanguage, ifNoneMatch, xTenant);
            //Assert.IsType<List<IndustryFacilitiesGetInner>>(response);
        }

        /// <summary>
        /// Test GetIndustrySystems
        /// </summary>
        [Fact]
        public void GetIndustrySystemsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //DateOnly xCompatibilityDate = null;
            //string? acceptLanguage = null;
            //string? ifNoneMatch = null;
            //string? xTenant = null;
            //var response = instance.GetIndustrySystems(xCompatibilityDate, acceptLanguage, ifNoneMatch, xTenant);
            //Assert.IsType<List<IndustrySystemsGetInner>>(response);
        }
    }
}
