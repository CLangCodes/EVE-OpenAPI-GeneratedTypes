/*
 * EVE Stable Infrastructure (ESI) - tranquility
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2025-08-26
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using Xunit;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using EveESI.Models.Model;
using EveESI.Models.Client;
using System.Reflection;
using Newtonsoft.Json;

namespace EveESI.Models.Test.Model
{
    /// <summary>
    ///  Class for testing CorporationsProjectsDetail
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the model.
    /// </remarks>
    public class CorporationsProjectsDetailTests : IDisposable
    {
        // TODO uncomment below to declare an instance variable for CorporationsProjectsDetail
        //private CorporationsProjectsDetail instance;

        public CorporationsProjectsDetailTests()
        {
            // TODO uncomment below to create an instance of CorporationsProjectsDetail
            //instance = new CorporationsProjectsDetail();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of CorporationsProjectsDetail
        /// </summary>
        [Fact]
        public void CorporationsProjectsDetailInstanceTest()
        {
            // TODO uncomment below to test "IsType" CorporationsProjectsDetail
            //Assert.IsType<CorporationsProjectsDetail>(instance);
        }

        /// <summary>
        /// Test the property 'VarConfiguration'
        /// </summary>
        [Fact]
        public void VarConfigurationTest()
        {
            // TODO unit test for the property 'VarConfiguration'
        }

        /// <summary>
        /// Test the property 'Contribution'
        /// </summary>
        [Fact]
        public void ContributionTest()
        {
            // TODO unit test for the property 'Contribution'
        }

        /// <summary>
        /// Test the property 'Creator'
        /// </summary>
        [Fact]
        public void CreatorTest()
        {
            // TODO unit test for the property 'Creator'
        }

        /// <summary>
        /// Test the property 'Details'
        /// </summary>
        [Fact]
        public void DetailsTest()
        {
            // TODO unit test for the property 'Details'
        }

        /// <summary>
        /// Test the property 'Id'
        /// </summary>
        [Fact]
        public void IdTest()
        {
            // TODO unit test for the property 'Id'
        }

        /// <summary>
        /// Test the property 'LastModified'
        /// </summary>
        [Fact]
        public void LastModifiedTest()
        {
            // TODO unit test for the property 'LastModified'
        }

        /// <summary>
        /// Test the property 'Name'
        /// </summary>
        [Fact]
        public void NameTest()
        {
            // TODO unit test for the property 'Name'
        }

        /// <summary>
        /// Test the property 'Progress'
        /// </summary>
        [Fact]
        public void ProgressTest()
        {
            // TODO unit test for the property 'Progress'
        }

        /// <summary>
        /// Test the property 'Reward'
        /// </summary>
        [Fact]
        public void RewardTest()
        {
            // TODO unit test for the property 'Reward'
        }

        /// <summary>
        /// Test the property 'State'
        /// </summary>
        [Fact]
        public void StateTest()
        {
            // TODO unit test for the property 'State'
        }
    }
}
